[{"/Users/leifu/Documents/william delivery system/frontend/src/Screens/PayDelivery.js":"1","/Users/leifu/Documents/william delivery system/frontend/src/Components/DeliveredPayTable.js":"2","/Users/leifu/Documents/william delivery system/frontend/src/App.js":"3","/Users/leifu/Documents/william delivery system/frontend/src/reportWebVitals.js":"4","/Users/leifu/Documents/william delivery system/frontend/src/Reducers/ordersReducer.js":"5","/Users/leifu/Documents/william delivery system/frontend/src/Screens/CreateOrders.js":"6","/Users/leifu/Documents/william delivery system/frontend/src/Screens/RequestTicketsScreen.js":"7","/Users/leifu/Documents/william delivery system/frontend/src/Actions/userAction.js":"8","/Users/leifu/Documents/william delivery system/frontend/src/Constant/userConstant.js":"9","/Users/leifu/Documents/william delivery system/frontend/src/Components/ModalDropOff/ModalDropOff.js":"10","/Users/leifu/Documents/william delivery system/frontend/src/Screens/SigninScreen.js":"11","/Users/leifu/Documents/william delivery system/frontend/src/Screens/OrdersScreen.js":"12","/Users/leifu/Documents/william delivery system/frontend/src/Reducers/userReducer.js":"13","/Users/leifu/Documents/william delivery system/frontend/src/Constant/ordersConstant.js":"14","/Users/leifu/Documents/william delivery system/frontend/src/Components/PopupModal/PopupModal.js":"15","/Users/leifu/Documents/william delivery system/frontend/src/Screens/CartScreen.js":"16","/Users/leifu/Documents/william delivery system/frontend/src/Actions/ordersAction.js":"17","/Users/leifu/Documents/william delivery system/frontend/src/store.js":"18","/Users/leifu/Documents/william delivery system/frontend/src/Screens/DataScreen.js":"19","/Users/leifu/Documents/william delivery system/frontend/src/Screens/RegisterScreen.js":"20","/Users/leifu/Documents/william delivery system/frontend/src/Screens/UploadImageScreen.js":"21","/Users/leifu/Documents/william delivery system/frontend/src/Screens/PersonalPofile.js":"22","/Users/leifu/Documents/william delivery system/frontend/src/index.js":"23","/Users/leifu/Documents/william delivery system/frontend/src/Components/ticketsTable.js":"24","/Users/leifu/Documents/william delivery system/frontend/src/Screens/YourTicketsScreen.js":"25","/Users/leifu/Documents/william delivery system/frontend/src/Components/SideDrawer.js":"26"},{"size":1741,"mtime":1612766540104,"results":"27","hashOfConfig":"28"},{"size":1057,"mtime":1615528640398,"results":"29","hashOfConfig":"28"},{"size":6023,"mtime":1621056317844,"results":"30","hashOfConfig":"28"},{"size":362,"mtime":1606689645794,"results":"31","hashOfConfig":"28"},{"size":9240,"mtime":1612047057665,"results":"32","hashOfConfig":"28"},{"size":2547,"mtime":1609132222756,"results":"33","hashOfConfig":"28"},{"size":2100,"mtime":1615991327219,"results":"34","hashOfConfig":"28"},{"size":3453,"mtime":1615987545231,"results":"35","hashOfConfig":"28"},{"size":868,"mtime":1609554762102,"results":"36","hashOfConfig":"28"},{"size":241,"mtime":1611539878987,"results":"37","hashOfConfig":"28"},{"size":3843,"mtime":1620705685338,"results":"38","hashOfConfig":"28"},{"size":6857,"mtime":1615530349633,"results":"39","hashOfConfig":"28"},{"size":2489,"mtime":1609554870482,"results":"40","hashOfConfig":"28"},{"size":2744,"mtime":1611902615614,"results":"41","hashOfConfig":"28"},{"size":989,"mtime":1611539842907,"results":"42","hashOfConfig":"28"},{"size":3616,"mtime":1615529738091,"results":"43","hashOfConfig":"28"},{"size":13121,"mtime":1615988621138,"results":"44","hashOfConfig":"28"},{"size":1753,"mtime":1611903803081,"results":"45","hashOfConfig":"28"},{"size":5464,"mtime":1615079271651,"results":"46","hashOfConfig":"28"},{"size":10206,"mtime":1616165406569,"results":"47","hashOfConfig":"28"},{"size":3169,"mtime":1616388441825,"results":"48","hashOfConfig":"28"},{"size":10135,"mtime":1615074589114,"results":"49","hashOfConfig":"28"},{"size":608,"mtime":1606695208305,"results":"50","hashOfConfig":"28"},{"size":4105,"mtime":1615991189364,"results":"51","hashOfConfig":"28"},{"size":2742,"mtime":1616165406568,"results":"52","hashOfConfig":"28"},{"size":512,"mtime":1620968719348,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"6qwt5x",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"89"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"75"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"75"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/leifu/Documents/william delivery system/frontend/src/Screens/PayDelivery.js",["123"],"import React, { useEffect } from 'react';\nimport { getTickets } from '../Actions/ordersAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DeliveredPayTable from '../Components/DeliveredPayTable';\n\nconst PayDelivery = () => {\n    const alltickets = useSelector(state=>state.getTickets);\n    const {tickets} = alltickets\n  \n    const dispatch = useDispatch(); \n    \n    const showTicket = (ticket) => {\n        let arr = [];\n            for (let order of ticket.ordersItems) {\n                if(order.status===\"DELIVERED\") {\n                    arr.push(order);\n                   \n                }\n            }\n           \n            return arr;\n    }\n   \n    useEffect(()=>{\n        dispatch(getTickets())\n    },[])\n\n    return (\n        <div className=\"payDelivery\"> \n            <table>\n                <thead>\n                    <tr>\n                        <th>User ID</th>\n                        <th>User Name</th>\n                        <th>User Finished Tickets</th>\n                        <th>Pay</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {tickets&&tickets.map(ticket => {\n                    let arr = showTicket(ticket);\n                    return arr.length>0&& \n                            \n                            <DeliveredPayTable \n                                key = {'payment'+ticket.userId }\n                                arr = {arr}\n                                userId = {ticket.userId}\n                            />\n                                  \n                }\n\n                )\n                    \n                }\n                </tbody>\n            </table>\n        </div>\n\n\n    )\n\n}\nexport default PayDelivery;",["124","125"],"/Users/leifu/Documents/william delivery system/frontend/src/Components/DeliveredPayTable.js",[],["126","127"],"/Users/leifu/Documents/william delivery system/frontend/src/App.js",["128","129","130"],"/Users/leifu/Documents/william delivery system/frontend/src/reportWebVitals.js",[],["131","132"],"/Users/leifu/Documents/william delivery system/frontend/src/Reducers/ordersReducer.js",[],"/Users/leifu/Documents/william delivery system/frontend/src/Screens/CreateOrders.js",[],"/Users/leifu/Documents/william delivery system/frontend/src/Screens/RequestTicketsScreen.js",["133","134"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {getTickets} from '../Actions/ordersAction';\nimport TicketsRow from '../Components/ticketsTable';\n\n\nconst RequestTickestsScreen = () => {\n    const allTickets = useSelector(state => state.getTickets);\n    const {tickets, loading} = allTickets;\n    console.log( 'driver ticktest',tickets);\n    const dispatch = useDispatch();\n    useEffect(()=>{\n            dispatch(getTickets())\n    },[])\n    \n    return (\n        <div className=\"requestTicketsScreen\">\n            <h2>All Tickets</h2>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Requestor's ID</th>\n                        <th>Requestor's Name</th>\n                        <th>Requestor's City</th>\n                        <th>Ticket's City</th>\n                        <th>Ticket's Number</th>\n                        <th>Ticket's Created Date</th>\n                        <th>Product</th>\n                        <th>Status</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {loading?<tr><td>loading</td></tr>:\n                     tickets && tickets.map && tickets.map(ticket=>\n                        ticket.ordersItems&&ticket.ordersItems.map(order => \n                            <TicketsRow \n                            driverCity={ticket.userInfo.city}\n                            driverName={ticket.userInfo.name}\n                            userId = {ticket.userId} \n                            key = {order._id+'Loren'}\n                            city = {order.city}\n                            orderId = {order.orderId}\n                            date = {order.date.substring(0,10)}\n                            product = {order.product}\n                            status = {order.status}\n                            imagePath= {order.imagePath}\n                            />\n                            ))}\n                </tbody>\n            </table>\n\n        </div>\n    )\n}\nexport default RequestTickestsScreen;","/Users/leifu/Documents/william delivery system/frontend/src/Actions/userAction.js",[],["135","136"],"/Users/leifu/Documents/william delivery system/frontend/src/Constant/userConstant.js",[],["137","138"],"/Users/leifu/Documents/william delivery system/frontend/src/Components/ModalDropOff/ModalDropOff.js",[],"/Users/leifu/Documents/william delivery system/frontend/src/Screens/SigninScreen.js",["139","140","141"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {signin} from '../Actions/userAction';\nconst SigninScreen =(props) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const userSignin = useSelector(state=>state.userSignin);\n    const {loading, userInfo, error} = userSignin;\n    const allYourTickets = useSelector(state => state.getYourTickets)\n    const {yourtickets} = allYourTickets\n    const cart = useSelector(state=> state.cart);\n    let { cartItems } = cart;\n    const dispatch  = useDispatch();\n    const redirect = props.location.search?props.location.search.split(\"=\")[1]:'/';\n    useEffect(\n       () => {\n        if (userInfo&&yourtickets&&yourtickets[0]){\n            console.log(\"wwww userInfo\",userInfo);\n            console.log(\"wwwww  yourtickets\",yourtickets);\n            const yourOrders =  yourtickets[0].ordersItems;\n           \n            const orderId = redirect.split(\"/\")[2];\n            console.log(\"orderId\",orderId)\n            console.log(\"yourOrders\",yourOrders)\n            const ticket = yourOrders.find(ticket=>ticket.orderId == orderId);\n            console.log(\"www ticket\", ticket);\n            if(ticket && ticket.status ===\"WAITING\") {\n                window.alert(\"You already have the ticket and it is waiting to check\")\n                props.history.push('/');\n            } \n            else if (ticket && ticket.status === \"REJECT\") {\n                window.alert(\"You have selected the ticket but it has been rejected\")\n                props.history.push('/');\n            }\n            else if (ticket && ticket.status == \"ACCEPT\") {\n                window.alert(\"You already have the ticket and it passed the check. You can delver it now\")\n                props.history.push('/');\n            }\n            else if(cartItems.length>0){\n                window.alert(\"You have to submit the ticket in you cart and then you can add another order in your cart\");\n                props.history.push(\"/\");\n            }\n            else {\n                props.history.push(redirect);\n            }\n        }\n        else if (userInfo){\n            props.history.push(redirect);\n        }\n    }, [userInfo, props.history,redirect]);\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(signin(email, password));\n    }\n    return <div className=\"form\">\n        <form onSubmit ={submitHandler} >\n            <ul className=\"form-container\">\n                <li>\n                    <h2>Sign-In</h2>\n                </li>\n                <li>\n                    {loading && <div>loading</div>}\n                    {error && <div>{error}</div>}\n                </li>\n                <li>\n                    <label htmlFor=\"email\">\n                        Email\n                    </label>\n                    <input type=\"email\" name = \"email\" id=\"email\" \n                    onChange={(e) => setEmail(e.target.value)}>\n                    </input>\n                </li>\n                <li>\n                    <label htmlFor = \"password\">Password</label>\n                    <input type=\"password\" id=\"password\" name=\"password\"\n                    onChange={(e) => setPassword(e.target.value)}></input>\n                </li>\n                <li>\n                    <button type=\"submit\" className=\"button primary\">Sign In</button>\n                </li>\n                <li>\n                    Need A Account?\n                </li>\n                <li>\n                    <Link to ={redirect === \"/\"? \"register\": \"register?redirect=\"+ redirect} className=\"button secondary full-width\">Create your account</Link>\n                </li>\n\n            </ul>\n        </form>\n    </div>\n}\nexport default SigninScreen;\n\n\n","/Users/leifu/Documents/william delivery system/frontend/src/Screens/OrdersScreen.js",["142","143","144","145"],"import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {getAllOrderList, getYourTickets} from '../Actions/ordersAction';\nimport { getYourTicketsReducer } from '../Reducers/ordersReducer';\nconst OrdersScreen = (props) => {\n    const [stateSearch, setStateSearch] = useState('');\n    const [citySearch, setCitySearch] = useState('');\n    const [streetSearch, setStreetSearch] = useState('');\n    const [orderNumberSearch, setOrderNumberSearch]= useState('');\n    const [createdDateSearch, setCreatedDateSearch]= useState('');\n    const [stateSort, setStateSort] = useState({ascending:false});\n    const [stateSortClicked, setStateSortClicked] = useState(false)\n    const [citySort, setCitySort] = useState({ascending:false});\n    const [citySortClicked, setCitySortClicked] = useState(false)\n    const [streetSort, setStreetSort] = useState({ascending:false});\n    const [streetSortClicked, setStreetSortClicked] = useState(false)\n    const [orderNumberSort, setOrderNumberSort]= useState({ascending:false});\n    const [orderNumberSortClicked, setOrderNumberSortClicked] = useState(false)\n    const [createdDateSort, setCreatedDateSort]= useState({ascending:false});\n    const [createdDateSortClicked, setCreatedDateSortClicked] = useState(false)\n    const [filterClass, setFilterClass] = useState('filter notShow');\n    const userSignin = useSelector(state => state.userSignin);\n    const {userInfo} = userSignin\n    const allOrders = useSelector(state => state.allOrderList);\n    const {allOrderList} = allOrders;\n    const cart = useSelector(state=> state.cart);\n    let { cartItems } = cart;\n    const takeHandler = (orderId) => {\n        if(userInfo) {\n            console.log(\"www call take handler get your tickets\");\n            // if(cartItems.length>0) {\n            //     window.alert(\"You have to submit the ticket in you cart and then you can add another order in your cart\");\n            // }\n            // else {\n            // dispatch(getYourTickets(props.history, orderId));\n            // }\n            dispatch(getYourTickets(props.history, orderId));\n        }\n        else{\n        props.history.push(`/signin?redirect=/orders/${orderId}`); \n        }\n    }\n    const filterShowHandler = () => {\n      filterClass==='filter notShow' \n      ? setFilterClass('filter')\n      : setFilterClass('filter notShow')\n       \n    }\n    const dispatch = useDispatch()\n    useEffect(()=> {\n        dispatch(getAllOrderList(\n            stateSearch, citySearch, streetSearch, \n            orderNumberSearch, createdDateSearch,\n            stateSort,stateSortClicked, \n            citySort,citySortClicked, \n            streetSort, streetSortClicked, \n            orderNumberSort, orderNumberSortClicked, \n            createdDateSort, createdDateSortClicked));\n            setStateSortClicked(false);\n            setCitySortClicked(false);\n            setStreetSortClicked(false);\n            setOrderNumberSortClicked(false);\n            setCreatedDateSortClicked(false);     \n    },[stateSearch, citySearch, streetSearch, orderNumberSearch, createdDateSearch\n    ,stateSort, citySort, streetSort, orderNumberSort, createdDateSort])\n \n    return (\n        <div className=\"ordersScreen\">\n            <h2>All Orders</h2>\n            <button className = \"filterButton\" onClick={filterShowHandler}>Filter</button>\n            <table>\n                <thead>\n                    <tr className={filterClass}>\n                        <td>\n                            <input type=\"text\" name=\"state\" value={stateSearch} onChange={e=>setStateSearch(e.target.value)} />\n                        </td>\n                        <td>\n                            <input type=\"text\" name=\"city\" value={citySearch} onChange={e=>setCitySearch(e.target.value)} />\n                        </td>\n                        <td>\n                            <input type=\"text\" name=\"street\" value={streetSearch} onChange={e=>setStreetSearch(e.target.value)} />\n                        </td>\n                        <td>\n                            <input type=\"text\" name=\"orderNumber\" value={orderNumberSearch} onChange={e=>setOrderNumberSearch(e.target.value)} />\n                        </td>\n                        <td>\n                            <input type=\"text\" name=\"createdDate\" value={createdDateSearch} onChange={e=>setCreatedDateSearch(e.target.value)}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <th onClick={()=>{\n                            setStateSort(prev => ({ascending:!prev.ascending}));\n                            setStateSortClicked(true);\n                        }}>\n                            State\n                        </th>\n                        <th onClick={()=>{\n                            setCitySort(prev => ({ascending:!prev.ascending}));\n                            setCitySortClicked(true);\n                        }}>                           \n                            City\n                        </th>\n                        <th onClick={()=>{\n                            setStreetSort(prev => ({ascending:!prev.ascending}));\n                            setStreetSortClicked(true);\n                        }}>                            \n                            Street\n                        </th>\n                        <th onClick={()=>{\n                            setOrderNumberSort(prev => ({ascending:!prev.ascending}));\n                            setOrderNumberSortClicked(true);\n                        }}>                            \n                            Order Number\n                        </th>\n                        <th onClick={()=>{\n                            setCreatedDateSort(prev => ({ascending:!prev.ascending}));\n                            setCreatedDateSortClicked(true);\n                        }}>                           \n                            Created Date\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {allOrderList&& allOrderList.map(order=>\n                        order.show&&<tr key={order._id}>\n                            <td>{order.state}</td>\n                            <td>{order.city}</td>\n                            <td>{order.street}</td>\n                            <td>{order.ordernumber}</td>\n                            <td>{order.updatedAt.substring(0,10)}</td>\n                            <td>{order.show}</td>\n                            <td><button className=\"myButton\" onClick = {()=>{takeHandler(order._id)}}>TAKE IT</button></td>\n                        </tr>\n                        \n                    )}\n                </tbody>\n\n            </table>\n        </div>\n    )\n}\nexport default OrdersScreen;","/Users/leifu/Documents/william delivery system/frontend/src/Reducers/userReducer.js",[],["146","147"],"/Users/leifu/Documents/william delivery system/frontend/src/Constant/ordersConstant.js",[],"/Users/leifu/Documents/william delivery system/frontend/src/Components/PopupModal/PopupModal.js",[],"/Users/leifu/Documents/william delivery system/frontend/src/Screens/CartScreen.js",["148","149","150","151","152","153"],"import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {addToCart, removeOrderFromCart} from \"../Actions/ordersAction\";\nimport {placeOrders} from '../Actions/ordersAction';\nimport { Link } from 'react-router-dom';\nconst CartScreen = (props) => {\n    const getAllOrders = useSelector(state=> state.allOrderList);\n    console.log('getAllOrders  www',getAllOrders);\n    const {allOrderList} = getAllOrders;\n    const userSignin = useSelector(state=> state.userSignin);\n    const {userInfo} = userSignin;\n    const personalOrders = useSelector(state=>state.placedOrders);\n    const {success, error,placedOrder} = personalOrders;\n    console.log(\"personalOrders\",personalOrders);\n    const cart = useSelector(state=> state.cart);\n    let { cartItems } = cart;\n    const [pid, setPid] = useState('');\n    console.log(\"cartItems\", cartItems);\n    const productId = props.match.params.id;\n    const dispatch = useDispatch();\n    console.log(\"productId\", productId);\n    const checkoutHandler = async() => { \n            if(userInfo){\n                dispatch(placeOrders({cartItems},props.history));\n            }\n    }\n    const deleteHandler = (orderId) => {\n            dispatch(removeOrderFromCart(orderId))\n    }\n    useEffect(() => {\n        if(productId) {\n            dispatch(addToCart(productId));\n        }\n    },[productId]);\n    return (\n        <div className = \"cartScreen\">\n             <h2>Cart</h2>\n                {success&&cartItems.length!==0&& <h4>Send To Server Successfully</h4>}\n                {error&&<div>{error}</div>}\n            \n        {!cartItems&& <p> Loading </p>}\n          {cartItems &&cartItems.length===0?<div>No Order In the Cart</div>\n                :<div>\n                        <button className=\"myButton\" onClick = {checkoutHandler}>Confirm</button>\n                        <table>\n                        <thead>\n                            <tr>\n                                <th>\n                                    State\n                                </th>\n                                <th>\n                                    City\n                                </th>\n                                <th>\n                                    Street\n                                </th>\n                                <th>\n                                    Order Number\n                                </th>\n                                <th>\n                                    Product\n                                </th>\n                                <th>\n                                    Created Date\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {cartItems&&cartItems.map(order=>\n                                <tr key={order.orderId+'will'}>\n                                    <td>{order.state}</td>\n                                    <td>{order.city}</td>\n                                    <td>{order.street}</td>\n                                    <td>{order.orderId}</td>\n                                    <td>{order.product}</td>\n                                    <td>{order.date.substring(0,10)}</td>\n                                    <td><button className=\"deleteButton\" onClick = {()=>deleteHandler(order.orderId)}>DELETE</button></td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n            </div>\n        }\n        </div>\n    \n    )\n}\nexport default CartScreen;","/Users/leifu/Documents/william delivery system/frontend/src/Actions/ordersAction.js",[],"/Users/leifu/Documents/william delivery system/frontend/src/store.js",[],"/Users/leifu/Documents/william delivery system/frontend/src/Screens/DataScreen.js",["154","155","156","157","158"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {usersList, deleteUser, saveUser} from '../Actions/userAction';\n\nconst DataScreen = React.memo(() => {\n    const inforUsers= useSelector(state => state.usersInfo);\n    const {error, loading, userInfo} = inforUsers;\n    const successDelete = useSelector(state => state.delteUser);\n    const {success: deleteSuccess} = successDelete;\n    const userSave = useSelector(state => state.saveUser);\n    const {success: saveSuccess, error: saveError, loading: saveLoading} = userSave;\n    const [name, setName] = useState('');\n    const [password,setPassword] = useState();\n    const [email, setEmail] = useState();\n    const [points, setPoints] = useState();\n    const [modalVisable, setModalVisable] = useState(false);\n    const [_id, setId] = useState();\n   \n    \n    const dispatch = useDispatch();\n    useEffect(()=> {\n        console.log(\"userSave\",userSave.success);\n        console.log('deleteSucces',deleteSuccess);\n        // if (saveSuccess) {\n        //     setModalVisable(false);\n        //   }\n        dispatch(usersList());\n       \n    },[deleteSuccess, saveSuccess])\n        \n   const openModal = (user) => {\n       setModalVisable(true);\n       setName(user.name);\n       setPassword(user.password);\n       setEmail(user.email);\n       setId(user._id)\n   }\n    const deletHandler = (user) => {\n        // if(window.confirm('Are you sure?')) {\n        //     dispatch(deleteUser(user._id));\n        // }\n        dispatch(deleteUser(user._id));\n    }\n    const submitHanlder = (event) => {\n        console.log('submit');\n        event.preventDefault();\n        dispatch(\n            saveUser({\n                name,\n                password,\n                email,\n                _id\n            }\n            )\n        )\n    }\n    \n    return (\n        <div className=\"product-list\">\n            <h2>All Users</h2>\n            <div className=\"editForm\">\n                {modalVisable && \n                <form onSubmit ={submitHanlder}>\n                    <div >\n                        <ul>\n                            <li>\n                                <h2>Edit Info</h2>\n                            </li>\n                            <li>\n                                {saveSuccess && <div> Save Success</div>}\n                                {saveLoading && <div>Loading</div>}\n                                {saveError && <div>{saveError}</div>}\n                               \n                            </li>\n                            <li>\n                                <label htmlFor=\"name\">Name</label>\n                                <input\n                                type=\"text\"\n                                name=\"name\"\n                                value={name}\n                                onChange = {e=>setName(e.target.value)}\n                                />\n                            </li>\n                            <li>\n                                <label htmlFor=\"email\">Email</label>\n                                <input\n                                type=\"email\"\n                                name=\"email\"\n                                value={email}\n                                onChange = {e=>setEmail(e.target.value)}\n                                />\n                            </li>\n                            <li>\n                                <label htmlFor=\"password\">password</label>\n                                <input\n                                type=\"text\"\n                                name=\"phonenumber\"\n                                value={password}\n                                onChange = {e=>setPassword(e.target.value)}\n                                />\n                            </li>\n                            \n                            <li>\n                                <button type=\"submit\" className=\"button primary\"\n                                >Submit</button>\n                                <button type=\"button\" className=\"back button primary\" onClick={()=> {setModalVisable(false)}}\n                                >Back</button>\n                            </li>\n                        </ul>\n                    </div>\n                </form> \n                }\n            </div>\n           \n          {!userInfo&& <p> Loading </p>}\n          {userInfo &&\n          <table className=\"table\">\n              <thead>\n                <tr>\n                    <th>ID</th>\n                    <th>Name</th>\n                    <th>Email</th>\n                    <th>password</th>\n                    <th>Date</th>\n                </tr>\n            </thead>\n            <tbody>\n                 {JSON.parse(userInfo).map((user) => (\n                    <tr key={user._id}>\n                        <td>{user._id}</td>\n                        <td>{user.name}</td>\n                        <td>{user.email}</td>\n                        <td>{user.password}</td>\n                        <td>{user.updatedAt.substring(0,10)}</td>\n                        <td>\n                        <button onClick={()=>openModal(user)}>Edit</button>\n                        <button onClick={()=>deletHandler(user)}>Delete</button>\n                        </td>\n                    </tr>\n                   \n                ))}\n            </tbody>\n           \n          </table>\n        }\n        </div>\n    )\n},\n)\nexport default DataScreen;","/Users/leifu/Documents/william delivery system/frontend/src/Screens/RegisterScreen.js",["159"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {register} from '../Actions/userAction';\nconst RegisterScreen =(props) => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n   \n    const [streetError, setStreetError] = useState(false);\n    const [cityError, setCityError] = useState(false);\n    const [stateError, setStateError] = useState(false);\n    const [cardNumberError, setCardNumberError] = useState(false);\n  \n    const [nameError, setNameError] = useState(false);\n    const [emailError, setEmailError] = useState(false);\n    const [passwordMatchError, setPasswordMatchError] = useState(false);\n    const [passwordError, setPasswordError] = useState(false);\n\n\n    const [password, setPassword] = useState('');\n    const [repassword, setRepassword] = useState('');\n    const [street, setStreet] = useState('');\n    const [city, setCity] = useState('');\n    const [state, setState] = useState('');\n    const [cardNumber, setCardNumber] = useState();\n    const userRegister = useSelector(state=>state.userRegister);\n    const {loading, error} = userRegister;\n    const userSignin = useSelector(state=>state.userSignin);\n    const {userInfo} = userSignin;\n    console.log(\"register userInfo\",userInfo);\n    const dispatch  = useDispatch();\n    const redirect = props.location.search ? props.location.search.split(\"=\")[1]:'/';\n    useEffect(\n       () => {\n           console.log(\"register\", userInfo);\n        if (userInfo){\n            props.history.push(redirect);\n        }\n    }, [userInfo]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (password&&(password === repassword)&&street&&city&&state&&cardNumber) {\n            dispatch(register(\n                name, email, password,street,city,state,cardNumber));\n        }\n        if(password !== repassword) {\n            setPasswordMatchError(true);\n        }\n        else {\n            setPasswordMatchError(false);\n        }\n        if(!name) {\n            setNameError(true);\n        }\n        else {\n            setNameError(false);\n        }\n      \n        if(!email) {\n            setEmailError(true);\n        }\n        else {\n            setEmailError(false);\n        }\n        if(!password) {\n            setPasswordError(true);\n        }\n        else {\n            setPasswordError(false);\n        }\n        \n        if(!street) {\n            setStreetError(true);\n        }\n        else {\n            setStreetError(false);\n        }\n        if(!city) {\n            setCityError(true);\n        }\n        else {\n            setCityError(false);\n        }\n      \n        if(!state) {\n            setStateError(true);\n        }\n        else {\n            setStateError(false);\n        }\n        if(!cardNumber) {\n            setCardNumberError(true);\n        }\n        else {\n            setCardNumberError(false);\n        }\n    }\n    return <div className=\"form\">\n        <form onSubmit ={submitHandler} >\n            <ul className=\"form-container\">\n                <li>\n                    <h2>Create An Account</h2>\n                </li>\n                <li>\n                    {loading && <div>loading</div>}\n                    {error && <div>{error}</div>}\n                    {passwordMatchError&& <div>Passwords do not match</div>}\n                    {streetError&& <div>Please fill the street field</div>}\n                    {cityError&& <div>Please fill the city field</div>}\n                    {stateError&& <div>Please select the state field</div>}\n                    {cardNumberError&& <div>Please fill the card number field</div>}\n                    {passwordError&&<div>Please fill the password field</div>}\n                    {emailError&&<div>Please fill the email field</div>}\n                    {nameError&&<div>Please fill the name field</div>}\n                </li>\n                <li>\n                    <label htmlFor=\"name\">\n                        Name\n                    </label>\n                    <input type=\"name\" name = \"name\" id=\"name\" value={name}\n                    onChange={(e) => setName(e.target.value)}>\n                    </input>\n                </li>\n                <li>\n                    <label htmlFor=\"email\">\n                        Email\n                    </label>\n                    <input type=\"email\" name = \"email\" id=\"email\" value={email}\n                    onChange={(e) => setEmail(e.target.value)}>\n                    </input>\n                </li>\n                <li>\n                    <label htmlFor = \"password\">Password</label>\n                    <input type=\"password\" id=\"password\" name=\"password\" value={password}\n                    onChange={(e) => setPassword(e.target.value)}></input>\n                </li>\n                <li>\n                    <label htmlFor = \"repassword\">Password</label>\n                    <input type=\"password\" id=\"repassword\" name=\"repassword\" value={repassword}\n                    onChange={(e) => setRepassword(e.target.value)}></input>\n                </li>\n                <li>\n                    <label htmlFor = \"cardnumber\">Credit/Debit Card Number</label>\n                    <input type=\"number\" id=\"cardnumber\" name=\"cardnumber\" value={cardNumber}\n                    onChange={(e) => setCardNumber(e.target.value)}></input>\n                </li>\n                <li>\n                    <label htmlFor = \"street\">Street</label>\n                    <input type=\"text\" id=\"street\" name=\"street\" value={street}\n                    onChange={(e) => setStreet(e.target.value)}></input>\n                </li>\n                <li>\n                    <label htmlFor = \"city\">City</label>\n                    <input type=\"text\" id=\"city\" name=\"city\" value={city}\n                    onChange={(e) => setCity(e.target.value)}></input>\n                </li>\n                <li>\n                    <label htmlFor = \"state\">State</label>\n                    {/* <input type=\"text\" id=\"state\" name=\"state\"\n                    onChange={(e) => setState(e.target.value)}></input> */}\n                    <select id=\"state\" name=\"state\" value={state} onChange={(e) => setState(e.target.value)}>\n                        <option value=\"\">--Please choose an option--</option>\n                            <option value=\"AL\">Alabama</option>\n                            <option value=\"AK\">Alaska</option>\n                            <option value=\"AZ\">Arizona</option>\n                            <option value=\"AR\">Arkansas</option>\n                            <option value=\"CA\">California</option>\n                            <option value=\"CO\">Colorado</option>\n                            <option value=\"CT\">Connecticut</option>\n                            <option value=\"DE\">Delaware</option>\n                            <option value=\"DC\">District Of Columbia</option>\n                            <option value=\"FL\">Florida</option>\n                            <option value=\"GA\">Georgia</option>\n                            <option value=\"HI\">Hawaii</option>\n                            <option value=\"ID\">Idaho</option>\n                            <option value=\"IL\">Illinois</option>\n                            <option value=\"IN\">Indiana</option>\n                            <option value=\"IA\">Iowa</option>\n                            <option value=\"KS\">Kansas</option>\n                            <option value=\"KY\">Kentucky</option>\n                            <option value=\"LA\">Louisiana</option>\n                            <option value=\"ME\">Maine</option>\n                            <option value=\"MD\">Maryland</option>\n                            <option value=\"MA\">Massachusetts</option>\n                            <option value=\"MI\">Michigan</option>\n                            <option value=\"MN\">Minnesota</option>\n                            <option value=\"MS\">Mississippi</option>\n                            <option value=\"MO\">Missouri</option>\n                            <option value=\"MT\">Montana</option>\n                            <option value=\"NE\">Nebraska</option>\n                            <option value=\"NV\">Nevada</option>\n                            <option value=\"NH\">New Hampshire</option>\n                            <option value=\"NJ\">New Jersey</option>\n                            <option value=\"NM\">New Mexico</option>\n                            <option value=\"NY\">New York</option>\n                            <option value=\"NC\">North Carolina</option>\n                            <option value=\"ND\">North Dakota</option>\n                            <option value=\"OH\">Ohio</option>\n                            <option value=\"OK\">Oklahoma</option>\n                            <option value=\"OR\">Oregon</option>\n                            <option value=\"PA\">Pennsylvania</option>\n                            <option value=\"RI\">Rhode Island</option>\n                            <option value=\"SC\">South Carolina</option>\n                            <option value=\"SD\">South Dakota</option>\n                            <option value=\"TN\">Tennessee</option>\n                            <option value=\"TX\">Texas</option>\n                            <option value=\"UT\">Utah</option>\n                            <option value=\"VT\">Vermont</option>\n                            <option value=\"VA\">Virginia</option>\n                            <option value=\"WA\">Washington</option>\n                            <option value=\"WV\">West Virginia</option>\n                            <option value=\"WI\">Wisconsin</option>\n                            <option value=\"WY\">Wyoming</option>\n                    </select>\t\n                </li>\n                <li>\n                    <button type=\"submit\" className=\"button primary\">Register</button>\n                </li>\n                <li>\n                    Already have an account? \n                    <Link to ={redirect === \"/\"? \"signin\": \"signin?redirect=\"+ redirect} className=\"button secondary full-width\">Sign in Your Account</Link>\n\n                </li>\n               \n\n            </ul>\n        </form>\n    </div>\n}\nexport default RegisterScreen;","/Users/leifu/Documents/william delivery system/frontend/src/Screens/UploadImageScreen.js",["160","161","162"],"import React, {useState, useEffect, Fragment}from 'react';\nimport Axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {getImagePath,updateImagePath,deliverSuccess} from '../Actions/ordersAction';\n\n\n\nconst UploadImageScreen = (props) => {\n    const userSignin = useSelector(state => state.userSignin);\n    const {userInfo} = userSignin;\n    const getDeliverSuccess = useSelector(state => state.deliverSuccess);\n    const {success:successDeliver} = getDeliverSuccess;\n    console.log('successDeliver',successDeliver);\n    const [loadingUpload, setLoadingUpload] = useState(false);\n    const [errorUpload, setErrorUpload] = useState('');\n    const [image, setImage] = useState('');\n    console.log('props.location.search',props.match.params.id);\n    console.log(\"image\", image);\n    const getImagepath = useSelector(state => state.imagePath);\n    const {imagePath, success, loading} = getImagepath;\n    console.log('imagePath',imagePath);\n    const[count,setCount] = useState(1);\n    const orderId = props.match.params.id;\n    const deliverSuccessHandler = () => {\n        dispatch(deliverSuccess(orderId));\n    }\n    const dispatch = useDispatch()\n    useEffect(()=>\n        {\n        if(count===1) {\n            dispatch(getImagePath(orderId,setImage))\n        }\n        if(imagePath&&success) {\n            setImage(imagePath);\n        }\n        else if (!imagePath&&success) {\n            setImage('/uploads/default.jpg')\n        }\n        setCount(count=>count+1);\n    }\n    ,[success])\n    const uploadFileHandler = (e) => {\n        const file = e.target.files[0];\n        const bodyFormData = new FormData();\n        bodyFormData.append('image', file);\n        setLoadingUpload(true);\n        Axios.post('/api/uploads', bodyFormData, {\n            headers: {'Content-Type': 'multipart/form-data',\n            Authorization: `william ${userInfo.token}`,\n        }\n        })\n        .then(\n            response => {\n                const {data} = response;\n                setImage(data);\n                dispatch(updateImagePath(orderId,data))\n                setLoadingUpload(false);\n            }\n        )\n        .catch(error => {\n            setErrorUpload(error.message);\n            setLoadingUpload(false);\n        }  \n        )  \n    }\n\n    return (\n       <Fragment>\n           <div className=\"uploadImageScreen\">\n            {successDeliver&&<div>Your photo get sent to the server successfully</div>}\n            {!image?<div>Loading</div>: \n            <div><img src={image} alt=\"delivered photo\" />\n                <label htmlFor =\"imageFile\">Image File</label>\n                <input\n                    type =\"file\"\n                    id=\"imageFile\"\n                    label=\"Choose Image\"\n                    onChange={uploadFileHandler}\n                    />\n                    {loadingUpload && <div>Loading</div>}\n                    {errorUpload && <div>error upload</div>}\n                    <button className =\"myButton\" onClick={deliverSuccessHandler}>Delivered Successfully</button>\n            </div>\n            }\n        </div>\n        </Fragment>\n            \n    )\n}\nexport default UploadImageScreen;","/Users/leifu/Documents/william delivery system/frontend/src/Screens/PersonalPofile.js",["163","164"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {register} from '../Actions/userAction';\n\nconst  PersonalPofile = () => {\n\n    const [streetError, setStreetError] = useState(false);\n    const [cityError, setCityError] = useState(false);\n    const [stateError, setStateError] = useState(false);\n    const [cardNumberError, setCardNumberError] = useState(false);\n  \n    const [nameError, setNameError] = useState(false);\n    const [emailError, setEmailError] = useState(false);\n    const [passwordMatchError, setPasswordMatchError] = useState(false);\n    const [passwordError, setPasswordError] = useState(false);\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [repassword, setRepassword] = useState('');\n    const [street, setStreet] = useState('');\n    const [city, setCity] = useState('');\n    const [state, setState] = useState('');\n    const [cardNumber, setCardNumber] = useState(1);\n    const userRegister = useSelector(state=>state.userRegister);\n    const {loading, error} = userRegister;\n    const userSignin = useSelector(state=>state.userSignin);\n    const {userInfo} = userSignin;\n    console.log(\"register userInfo\",userInfo);\n    const dispatch  = useDispatch();\n  \n    useEffect(\n       () => {\n        console.log(\"starting userInfo\",userInfo);\n           if(userInfo) {\n               setStreet(userInfo.street);\n               setCity(userInfo.city);\n               setState(userInfo.state);\n               setCardNumber(userInfo.cardNumber);\n               setName(userInfo.name);\n               setEmail(userInfo.email);\n           }\n         \n    }, []);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (password&&(password === repassword)&&street&&city&&state&&cardNumber) {\n            dispatch(register(\n                name, email, password,street,city,state,cardNumber));\n        }\n        if(password !== repassword) {\n            setPasswordMatchError(true);\n        }\n        else {\n            setPasswordMatchError(false);\n        }\n        if(!name) {\n            setNameError(true);\n        }\n        else {\n            setNameError(false);\n        }\n      \n        if(!email) {\n            setEmailError(true);\n        }\n        else {\n            setEmailError(false);\n        }\n        if(!password) {\n            setPasswordError(true);\n        }\n        else {\n            setPasswordError(false);\n        }\n        \n        if(!street) {\n            setStreetError(true);\n        }\n        else {\n            setStreetError(false);\n        }\n        if(!city) {\n            setCityError(true);\n        }\n        else {\n            setCityError(false);\n        }\n      \n        if(!state) {\n            setStateError(true);\n        }\n        else {\n            setStateError(false);\n        }\n        if(!cardNumber) {\n            setCardNumberError(true);\n        }\n        else {\n            setCardNumberError(false);\n        }\n    }\n    return <div className=\"form personalProfile\">\n        <form onSubmit ={submitHandler} >\n            <ul className=\"form-container\">\n                <li>\n                    <h2>Personal Information</h2>\n                </li>\n                <li className=\"errorShow\">\n                    {loading && <div>loading</div>}\n                    {error && <div>{error}</div>}\n                    {passwordMatchError&& <div>Passwords do not match</div>}\n                    {streetError&& <div>Please fill the street field</div>}\n                    {cityError&& <div>Please fill the city field</div>}\n                    {stateError&& <div>Please select the state field</div>}\n                    {cardNumberError&& <div>Please fill the card number field</div>}\n                    {passwordError&&<div>Please fill the password field</div>}\n                    {emailError&&<div>Please fill the email field</div>}\n                    {nameError&&<div>Please fill the name field</div>}\n                </li>\n                <li>\n                    <label htmlFor=\"name\">\n                        Name\n                    </label>\n                    <input type=\"name\" name = \"name\" id=\"name\" value={name}\n                    onChange={(e) => setName(e.target.value)}>\n                    </input>\n                </li>\n                <li>\n                    <label htmlFor=\"email\">\n                        Email\n                    </label>\n                    <input type=\"email\" name = \"email\" id=\"email\" value={email}\n                    onChange={(e) => setEmail(e.target.value)}>\n                    </input>\n                </li>\n                <li>\n                    <label htmlFor = \"password\">Password</label>\n                    <input type=\"password\" id=\"password\" name=\"password\" value={password}\n                    onChange={(e) => setPassword(e.target.value)}></input>\n                </li>\n                <li>\n                    <label htmlFor = \"repassword\">Password</label>\n                    <input type=\"password\" id=\"repassword\" name=\"repassword\"\n                    onChange={(e) => setRepassword(e.target.value)}></input>\n                </li>\n                <li>\n                    <label htmlFor = \"cardnumber\">Credit/Debit Card Number</label>\n                    <input type=\"number\" id=\"cardnumber\" name=\"cardnumber\" value={cardNumber}\n                    onChange={(e) => setCardNumber(e.target.value)}></input>\n                </li>\n                <li>\n                    <label htmlFor = \"street\">Street</label>\n                    <input type=\"text\" id=\"street\" name=\"street\" value={street}\n                    onChange={(e) => setStreet(e.target.value)}></input>\n                </li>\n                <li>\n                    <label htmlFor = \"city\">City</label>\n                    <input type=\"text\" id=\"city\" name=\"city\" value={city}\n                    onChange={(e) => setCity(e.target.value)}></input>\n                </li>\n                <li>\n                    <label htmlFor = \"state\">State</label>\n                    {/* <input type=\"text\" id=\"state\" name=\"state\"\n                    onChange={(e) => setState(e.target.value)}></input> */}\n                    <select id=\"state\" name=\"state\" onChange={(e) => setState(e.target.value)} value={state}>\n                        <option value=\"\">--Please choose an option--</option>\n                            <option value=\"AL\">Alabama</option>\n                            <option value=\"AK\">Alaska</option>\n                            <option value=\"AZ\">Arizona</option>\n                            <option value=\"AR\">Arkansas</option>\n                            <option value=\"CA\">California</option>\n                            <option value=\"CO\">Colorado</option>\n                            <option value=\"CT\">Connecticut</option>\n                            <option value=\"DE\">Delaware</option>\n                            <option value=\"DC\">District Of Columbia</option>\n                            <option value=\"FL\">Florida</option>\n                            <option value=\"GA\">Georgia</option>\n                            <option value=\"HI\">Hawaii</option>\n                            <option value=\"ID\">Idaho</option>\n                            <option value=\"IL\">Illinois</option>\n                            <option value=\"IN\">Indiana</option>\n                            <option value=\"IA\">Iowa</option>\n                            <option value=\"KS\">Kansas</option>\n                            <option value=\"KY\">Kentucky</option>\n                            <option value=\"LA\">Louisiana</option>\n                            <option value=\"ME\">Maine</option>\n                            <option value=\"MD\">Maryland</option>\n                            <option value=\"MA\">Massachusetts</option>\n                            <option value=\"MI\">Michigan</option>\n                            <option value=\"MN\">Minnesota</option>\n                            <option value=\"MS\">Mississippi</option>\n                            <option value=\"MO\">Missouri</option>\n                            <option value=\"MT\">Montana</option>\n                            <option value=\"NE\">Nebraska</option>\n                            <option value=\"NV\">Nevada</option>\n                            <option value=\"NH\">New Hampshire</option>\n                            <option value=\"NJ\">New Jersey</option>\n                            <option value=\"NM\">New Mexico</option>\n                            <option value=\"NY\">New York</option>\n                            <option value=\"NC\">North Carolina</option>\n                            <option value=\"ND\">North Dakota</option>\n                            <option value=\"OH\">Ohio</option>\n                            <option value=\"OK\">Oklahoma</option>\n                            <option value=\"OR\">Oregon</option>\n                            <option value=\"PA\">Pennsylvania</option>\n                            <option value=\"RI\">Rhode Island</option>\n                            <option value=\"SC\">South Carolina</option>\n                            <option value=\"SD\">South Dakota</option>\n                            <option value=\"TN\">Tennessee</option>\n                            <option value=\"TX\">Texas</option>\n                            <option value=\"UT\">Utah</option>\n                            <option value=\"VT\">Vermont</option>\n                            <option value=\"VA\">Virginia</option>\n                            <option value=\"WA\">Washington</option>\n                            <option value=\"WV\">West Virginia</option>\n                            <option value=\"WI\">Wisconsin</option>\n                            <option value=\"WY\">Wyoming</option>\n                    </select>\t\n                </li>\n                <li>\n                    <button type=\"submit\" className=\"button primary\">Update</button>\n                </li>\n               \n               \n\n            </ul>\n        </form>\n    </div>\n}\n\nexport default PersonalPofile;\n\n","/Users/leifu/Documents/william delivery system/frontend/src/index.js",[],"/Users/leifu/Documents/william delivery system/frontend/src/Components/ticketsTable.js",["165","166","167","168","169","170","171","172","173","174"],"import React, { useEffect, Fragment, useState }from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteOrder,acceptOrder, rejectOrder, releaseOrder } from '../Actions/ordersAction';\nimport PopupModal from './PopupModal/PopupModal';\n\nconst TicketsTable = (props) => {\n\n    const getTicketStatus = useSelector(state => state.getStatus);\n    const {ticketsStatus} = getTicketStatus;\n    \n    const [status, setStatus] = useState(props.status)\n    const [userId, setUserId] = useState(props.userId)\n    const [city, setCity] = useState(props.city)\n    const [orderId, setOrderId] = useState(props.orderId)\n    const [date, setDate] = useState(props.date)\n    const [product, setProduct] = useState(props.product)\n    const [driverCity, setDriverCity] = useState(props.driverCity)\n    const [driverName, setDriverName] = useState(props.driverName)\n    const [deliveredImage, setDeliveredImage] = useState();\n    const [showing, setShowing] = useState(false);\n    const [imagePath, setImagePath] = useState();\n    const ticketStatus = ticketsStatus?ticketsStatus[`${userId}_${orderId}`]:null;\n    const [remove, setRemove] = useState(false);\n    const [count, setCount] = useState(1);\n    console.log(\"all ticketStatus\",ticketsStatus);\n    const dispatch = useDispatch();\n    const acceptHandler = (userId, orderId) => {\n        console.log(\"orderID\", orderId);\n        dispatch(acceptOrder(userId, orderId)) \n    }\n    const rejectHandler = (userId, orderId) => {\n        dispatch(rejectOrder(userId, orderId)) \n    }\n    const deletetHandler = (userId, orderId) => {\n        dispatch(deleteOrder(userId, orderId)) \n        setRemove(true);\n    }\n    const releaseHandler = (userId, orderId) => {\n        dispatch(releaseOrder(userId, orderId)) \n    }\n    const closeModalHandler = () => {\n         setShowing(false);\n    }\n    const imageClickHandler = () => {\n          setShowing(true)\n    }\n    const checkImageHandler = (imagePath) => {\n        setImagePath(imagePath);\n        if(!deliveredImage) {\n        setDeliveredImage(\n            <img onClick = {imageClickHandler} className=\"deliverImage\" src={imagePath} />\n        )\n        }\n        if(deliveredImage) {\n            setDeliveredImage();\n        }\n    }\n    \n    useEffect(()=>{\n        console.log('ticketStatus',ticketStatus);\n        console.log('status',status);\n           if(count===1&&ticketStatus&&ticketStatus!==status) {\n                setStatus(status);\n           }\n           else  if(count!==1&&ticketStatus&&ticketStatus!==status) {\n                \n                setStatus(ticketStatus)\n             \n            }\n            setCount(prev=>prev+1);\n    },[ticketStatus])\n    return (\n         <Fragment>\n            {remove? null :<tr>\n                <td>{userId}</td>\n                <td>{driverName}</td>\n                <td>{driverCity}</td>\n                <td>{city}</td>\n                <td>{orderId}</td>\n                <td>{date}</td>\n                <td>{product}</td>\n                <td>{status}</td>\n               \n                <td><button className=\"myButton\" onClick={()=>acceptHandler(userId, orderId)}>ACCEPT</button></td>\n                <td><button className=\"rejectButton\" onClick={()=>rejectHandler(userId, orderId)}>REJECT</button></td>\n                {status===\"ACCEPT\"&&<td><button className=\"releaseButton\" onClick={()=>releaseHandler(userId, orderId)}>RELEASE</button></td>}\n                {status===\"DELIVERED\"&&<td>{deliveredImage}<button className=\"deliverCheckButton\" onClick={()=>checkImageHandler(props.imagePath)}>DELIVERED CHECK</button></td>}\n                \n                {(status===\"DELIVERED\")&&<td><button className=\"deleteButton\" onClick={()=>deletetHandler(userId, orderId)}>DELETE</button></td>}\n           \n                <td>\n                    <PopupModal show = {showing} closeModal = {closeModalHandler}>\n                    <img  className=\"PopupModalImage\"  src={imagePath} />\n                    </PopupModal> \n                </td>\n            </tr> \n            }\n        </Fragment>\n        \n    )\n}\nexport default TicketsTable;","/Users/leifu/Documents/william delivery system/frontend/src/Screens/YourTicketsScreen.js",["175","176","177"],"import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {getYourTickets} from '../Actions/ordersAction';\nimport {Link} from 'react-router-dom';\nconst YourTicketsScreen = (props) => {\n    const yourTickets = useSelector(state=> state.getYourTickets);\n    const {yourtickets, success} = yourTickets;\n    const [clearReject, setClearReject] = useState(false);\n    console.log(\"yourtickets\",yourtickets);\n    const dispatch = useDispatch();\n\n    const condition = (order) => {\n        console.log('in condition');\n        console.log(\"clearReject\",clearReject);\n        if(clearReject) {\n            \n            return order.status !== \"REJECT\"\n        }\n        return true\n    }\n    const releaseHandler = (orderId) => {\n        props.history.push(`/uploadimage/${orderId}`); \n    }\n    useEffect(()=>{\n        setClearReject(false)\n        dispatch(getYourTickets())\n    },[])\n    return (\n        <div className=\"yourTickets\">\n            <h1>Your Tickets</h1>\n            <button className = \"myButton\" onClick = {() => setClearReject(true)}>Clear Rejected Order</button>\n             {!yourtickets&& <p> Loading </p>}\n          {yourtickets &&\n           <table>\n           <thead>\n               <tr>\n                   <th>\n                       State\n                   </th>\n                   <th>\n                       City\n                   </th>\n                   <th>\n                       Street\n                   </th>\n                   <th>\n                       Order Number\n                   </th>\n                   <th>\n                       Product\n                   </th>\n                   <th>\n                       Created Date\n                   </th>\n                   <th>\n                       Status\n                   </th>\n               </tr>\n           </thead>\n           <tbody>\n               {yourtickets[0]&&yourtickets[0].ordersItems.map(order=>\n                    condition(order) &&<tr key={order.orderId+'will'}>\n                       <td>{order.state}</td>\n                       <td>{order.city}</td>\n                       <td>{order.street}</td>\n                       <td>{order.ordernumber}</td>\n                       <td>{order.date.substring(0,10)}</td>\n                       <td>{order.status}</td>\n                       {order.status===\"RELEASE\"&&<td><button onClick={()=>releaseHandler(order.orderId)}>DELIVERED</button></td>}\n                       {order.status===\"DELIVERED\"&&<td><button onClick={()=>releaseHandler(order.orderId)}>UPDATE PHOTO</button></td>}\n                   </tr>\n               )}\n           </tbody>\n\n       </table>\n        }\n\n        </div>\n\n    )\n}\nexport default YourTicketsScreen;","/Users/leifu/Documents/william delivery system/frontend/src/Components/SideDrawer.js",[],{"ruleId":"178","severity":1,"message":"179","line":26,"column":7,"nodeType":"180","endLine":26,"endColumn":9,"suggestions":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"182","replacedBy":"186"},{"ruleId":"184","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":1,"column":8,"nodeType":"190","messageId":"191","endLine":1,"endColumn":12},{"ruleId":"188","severity":1,"message":"192","line":11,"column":37,"nodeType":"190","messageId":"191","endLine":11,"endColumn":43},{"ruleId":"188","severity":1,"message":"193","line":18,"column":8,"nodeType":"190","messageId":"191","endLine":18,"endColumn":20},{"ruleId":"182","replacedBy":"194"},{"ruleId":"184","replacedBy":"195"},{"ruleId":"188","severity":1,"message":"196","line":1,"column":28,"nodeType":"190","messageId":"191","endLine":1,"endColumn":36},{"ruleId":"178","severity":1,"message":"179","line":14,"column":7,"nodeType":"180","endLine":14,"endColumn":9,"suggestions":"197"},{"ruleId":"182","replacedBy":"198"},{"ruleId":"184","replacedBy":"199"},{"ruleId":"182","replacedBy":"200"},{"ruleId":"184","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":26,"column":67,"nodeType":"204","messageId":"205","endLine":26,"endColumn":69},{"ruleId":"202","severity":1,"message":"203","line":36,"column":46,"nodeType":"204","messageId":"205","endLine":36,"endColumn":48},{"ruleId":"178","severity":1,"message":"206","line":51,"column":8,"nodeType":"180","endLine":51,"endColumn":42,"suggestions":"207"},{"ruleId":"188","severity":1,"message":"208","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":14},{"ruleId":"188","severity":1,"message":"209","line":5,"column":10,"nodeType":"190","messageId":"191","endLine":5,"endColumn":31},{"ruleId":"188","severity":1,"message":"210","line":28,"column":11,"nodeType":"190","messageId":"191","endLine":28,"endColumn":20},{"ruleId":"178","severity":1,"message":"211","line":65,"column":7,"nodeType":"180","endLine":66,"endColumn":72,"suggestions":"212"},{"ruleId":"182","replacedBy":"213"},{"ruleId":"184","replacedBy":"214"},{"ruleId":"188","severity":1,"message":"208","line":5,"column":10,"nodeType":"190","messageId":"191","endLine":5,"endColumn":14},{"ruleId":"188","severity":1,"message":"215","line":9,"column":12,"nodeType":"190","messageId":"191","endLine":9,"endColumn":24},{"ruleId":"188","severity":1,"message":"216","line":13,"column":27,"nodeType":"190","messageId":"191","endLine":13,"endColumn":38},{"ruleId":"188","severity":1,"message":"217","line":17,"column":12,"nodeType":"190","messageId":"191","endLine":17,"endColumn":15},{"ruleId":"188","severity":1,"message":"218","line":17,"column":17,"nodeType":"190","messageId":"191","endLine":17,"endColumn":23},{"ruleId":"178","severity":1,"message":"179","line":34,"column":7,"nodeType":"180","endLine":34,"endColumn":18,"suggestions":"219"},{"ruleId":"188","severity":1,"message":"220","line":7,"column":12,"nodeType":"190","messageId":"191","endLine":7,"endColumn":17},{"ruleId":"188","severity":1,"message":"221","line":7,"column":19,"nodeType":"190","messageId":"191","endLine":7,"endColumn":26},{"ruleId":"188","severity":1,"message":"222","line":15,"column":12,"nodeType":"190","messageId":"191","endLine":15,"endColumn":18},{"ruleId":"188","severity":1,"message":"223","line":15,"column":20,"nodeType":"190","messageId":"191","endLine":15,"endColumn":29},{"ruleId":"178","severity":1,"message":"224","line":29,"column":7,"nodeType":"180","endLine":29,"endColumn":35,"suggestions":"225"},{"ruleId":"178","severity":1,"message":"226","line":39,"column":8,"nodeType":"180","endLine":39,"endColumn":18,"suggestions":"227"},{"ruleId":"188","severity":1,"message":"221","line":20,"column":32,"nodeType":"190","messageId":"191","endLine":20,"endColumn":39},{"ruleId":"178","severity":1,"message":"228","line":41,"column":6,"nodeType":"180","endLine":41,"endColumn":15,"suggestions":"229"},{"ruleId":"230","severity":1,"message":"231","line":72,"column":18,"nodeType":"232","endLine":72,"endColumn":59},{"ruleId":"188","severity":1,"message":"208","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":14},{"ruleId":"178","severity":1,"message":"233","line":45,"column":8,"nodeType":"180","endLine":45,"endColumn":10,"suggestions":"234"},{"ruleId":"188","severity":1,"message":"235","line":12,"column":20,"nodeType":"190","messageId":"191","endLine":12,"endColumn":29},{"ruleId":"188","severity":1,"message":"236","line":13,"column":18,"nodeType":"190","messageId":"191","endLine":13,"endColumn":25},{"ruleId":"188","severity":1,"message":"237","line":14,"column":21,"nodeType":"190","messageId":"191","endLine":14,"endColumn":31},{"ruleId":"188","severity":1,"message":"238","line":15,"column":18,"nodeType":"190","messageId":"191","endLine":15,"endColumn":25},{"ruleId":"188","severity":1,"message":"239","line":16,"column":21,"nodeType":"190","messageId":"191","endLine":16,"endColumn":31},{"ruleId":"188","severity":1,"message":"240","line":17,"column":24,"nodeType":"190","messageId":"191","endLine":17,"endColumn":37},{"ruleId":"188","severity":1,"message":"241","line":18,"column":24,"nodeType":"190","messageId":"191","endLine":18,"endColumn":37},{"ruleId":"242","severity":1,"message":"243","line":51,"column":13,"nodeType":"232","endLine":51,"endColumn":91},{"ruleId":"178","severity":1,"message":"244","line":71,"column":7,"nodeType":"180","endLine":71,"endColumn":21,"suggestions":"245"},{"ruleId":"242","severity":1,"message":"243","line":93,"column":21,"nodeType":"232","endLine":93,"endColumn":74},{"ruleId":"188","severity":1,"message":"208","line":4,"column":9,"nodeType":"190","messageId":"191","endLine":4,"endColumn":13},{"ruleId":"188","severity":1,"message":"246","line":7,"column":25,"nodeType":"190","messageId":"191","endLine":7,"endColumn":32},{"ruleId":"178","severity":1,"message":"179","line":27,"column":7,"nodeType":"180","endLine":27,"endColumn":9,"suggestions":"247"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["248"],"no-native-reassign",["249"],"no-negated-in-lhs",["250"],["249"],["250"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'ModalDropOff' is defined but never used.",["249"],["250"],"'useState' is defined but never used.",["251"],["249"],["250"],["249"],["250"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'cartItems.length' and 'yourtickets'. Either include them or remove the dependency array.",["252"],"'Link' is defined but never used.","'getYourTicketsReducer' is defined but never used.","'cartItems' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'citySortClicked', 'createdDateSortClicked', 'dispatch', 'orderNumberSortClicked', 'stateSortClicked', and 'streetSortClicked'. Either include them or remove the dependency array.",["253"],["249"],["250"],"'allOrderList' is assigned a value but never used.","'placedOrder' is assigned a value but never used.","'pid' is assigned a value but never used.","'setPid' is assigned a value but never used.",["254"],"'error' is assigned a value but never used.","'loading' is assigned a value but never used.","'points' is assigned a value but never used.","'setPoints' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userSave.success'. Either include them or remove the dependency array.",["255"],"React Hook useEffect has missing dependencies: 'props.history' and 'redirect'. Either include them or remove the dependency array.",["256"],"React Hook useEffect has missing dependencies: 'count', 'dispatch', 'imagePath', and 'orderId'. Either include them or remove the dependency array.",["257"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["258"],"'setUserId' is assigned a value but never used.","'setCity' is assigned a value but never used.","'setOrderId' is assigned a value but never used.","'setDate' is assigned a value but never used.","'setProduct' is assigned a value but never used.","'setDriverCity' is assigned a value but never used.","'setDriverName' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'count' and 'status'. Either include them or remove the dependency array. You can also do a functional update 'setStatus(s => ...)' if you only need 'status' in the 'setStatus' call.",["259"],"'success' is assigned a value but never used.",["260"],{"desc":"261","fix":"262"},"no-global-assign","no-unsafe-negation",{"desc":"261","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"261","fix":"280"},"Update the dependencies array to be: [dispatch]",{"range":"281","text":"282"},{"range":"283","text":"282"},"Update the dependencies array to be: [userInfo, props.history, redirect, yourtickets, cartItems.length]",{"range":"284","text":"285"},"Update the dependencies array to be: [stateSearch, citySearch, streetSearch, orderNumberSearch, createdDateSearch, stateSort, citySort, streetSort, orderNumberSort, createdDateSort, dispatch, stateSortClicked, citySortClicked, streetSortClicked, orderNumberSortClicked, createdDateSortClicked]",{"range":"286","text":"287"},"Update the dependencies array to be: [dispatch, productId]",{"range":"288","text":"289"},"Update the dependencies array to be: [deleteSuccess, dispatch, saveSuccess, userSave.success]",{"range":"290","text":"291"},"Update the dependencies array to be: [props.history, redirect, userInfo]",{"range":"292","text":"293"},"Update the dependencies array to be: [count, dispatch, imagePath, orderId, success]",{"range":"294","text":"295"},"Update the dependencies array to be: [userInfo]",{"range":"296","text":"297"},"Update the dependencies array to be: [count, status, ticketStatus]",{"range":"298","text":"299"},{"range":"300","text":"282"},[737,739],"[dispatch]",[501,503],[2297,2331],"[userInfo, props.history, redirect, yourtickets, cartItems.length]",[3089,3237],"[stateSearch, citySearch, streetSearch, orderNumberSearch, createdDateSearch, stateSort, citySort, streetSort, orderNumberSort, createdDateSort, dispatch, stateSortClicked, citySortClicked, streetSortClicked, orderNumberSortClicked, createdDateSortClicked]",[1376,1387],"[dispatch, productId]",[1160,1188],"[deleteSuccess, dispatch, saveSuccess, userSave.success]",[1633,1643],"[props.history, redirect, userInfo]",[1509,1518],"[count, dispatch, imagePath, orderId, success]",[1778,1780],"[userInfo]",[2667,2681],"[count, status, ticketStatus]",[932,934]]