[{"/Users/leifu/Documents/william delivery system/frontend/src/Screens/PayDelivery.js":"1","/Users/leifu/Documents/william delivery system/frontend/src/Components/DeliveredPayTable.js":"2","/Users/leifu/Documents/william delivery system/frontend/src/App.js":"3","/Users/leifu/Documents/william delivery system/frontend/src/reportWebVitals.js":"4","/Users/leifu/Documents/william delivery system/frontend/src/Reducers/ordersReducer.js":"5","/Users/leifu/Documents/william delivery system/frontend/src/Screens/CreateOrders.js":"6","/Users/leifu/Documents/william delivery system/frontend/src/Screens/RequestTicketsScreen.js":"7","/Users/leifu/Documents/william delivery system/frontend/src/Actions/userAction.js":"8","/Users/leifu/Documents/william delivery system/frontend/src/Constant/userConstant.js":"9","/Users/leifu/Documents/william delivery system/frontend/src/Components/ModalDropOff/ModalDropOff.js":"10","/Users/leifu/Documents/william delivery system/frontend/src/Screens/SigninScreen.js":"11","/Users/leifu/Documents/william delivery system/frontend/src/Screens/OrdersScreen.js":"12","/Users/leifu/Documents/william delivery system/frontend/src/Reducers/userReducer.js":"13","/Users/leifu/Documents/william delivery system/frontend/src/Constant/ordersConstant.js":"14","/Users/leifu/Documents/william delivery system/frontend/src/Components/PopupModal/PopupModal.js":"15","/Users/leifu/Documents/william delivery system/frontend/src/Screens/CartScreen.js":"16","/Users/leifu/Documents/william delivery system/frontend/src/Actions/ordersAction.js":"17","/Users/leifu/Documents/william delivery system/frontend/src/store.js":"18","/Users/leifu/Documents/william delivery system/frontend/src/Screens/DataScreen.js":"19","/Users/leifu/Documents/william delivery system/frontend/src/Screens/RegisterScreen.js":"20","/Users/leifu/Documents/william delivery system/frontend/src/Screens/UploadImageScreen.js":"21","/Users/leifu/Documents/william delivery system/frontend/src/Screens/PersonalPofile.js":"22","/Users/leifu/Documents/william delivery system/frontend/src/index.js":"23","/Users/leifu/Documents/william delivery system/frontend/src/Components/ticketsTable.js":"24","/Users/leifu/Documents/william delivery system/frontend/src/Screens/YourTicketsScreen.js":"25"},{"size":1741,"mtime":1612766540104,"results":"26","hashOfConfig":"27"},{"size":1057,"mtime":1615528640398,"results":"28","hashOfConfig":"27"},{"size":3783,"mtime":1614141011798,"results":"29","hashOfConfig":"27"},{"size":362,"mtime":1606689645794,"results":"30","hashOfConfig":"27"},{"size":9240,"mtime":1612047057665,"results":"31","hashOfConfig":"27"},{"size":2547,"mtime":1609132222756,"results":"32","hashOfConfig":"27"},{"size":1995,"mtime":1615080062738,"results":"33","hashOfConfig":"27"},{"size":3407,"mtime":1613622072256,"results":"34","hashOfConfig":"27"},{"size":868,"mtime":1609554762102,"results":"35","hashOfConfig":"27"},{"size":241,"mtime":1611539878987,"results":"36","hashOfConfig":"27"},{"size":3843,"mtime":1613618909952,"results":"37","hashOfConfig":"27"},{"size":6857,"mtime":1615530349633,"results":"38","hashOfConfig":"27"},{"size":2489,"mtime":1609554870482,"results":"39","hashOfConfig":"27"},{"size":2744,"mtime":1611902615614,"results":"40","hashOfConfig":"27"},{"size":989,"mtime":1611539842907,"results":"41","hashOfConfig":"27"},{"size":3616,"mtime":1615529738091,"results":"42","hashOfConfig":"27"},{"size":13075,"mtime":1615139422278,"results":"43","hashOfConfig":"27"},{"size":1753,"mtime":1611903803081,"results":"44","hashOfConfig":"27"},{"size":5464,"mtime":1615079271651,"results":"45","hashOfConfig":"27"},{"size":10084,"mtime":1614956227834,"results":"46","hashOfConfig":"27"},{"size":3147,"mtime":1611532576307,"results":"47","hashOfConfig":"27"},{"size":10135,"mtime":1615074589114,"results":"48","hashOfConfig":"27"},{"size":608,"mtime":1606695208305,"results":"49","hashOfConfig":"27"},{"size":3943,"mtime":1615528468250,"results":"50","hashOfConfig":"27"},{"size":2786,"mtime":1615529613649,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"6qwt5x",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"67"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"67"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/leifu/Documents/william delivery system/frontend/src/Screens/PayDelivery.js",["111"],"import React, { useEffect } from 'react';\nimport { getTickets } from '../Actions/ordersAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DeliveredPayTable from '../Components/DeliveredPayTable';\n\nconst PayDelivery = () => {\n    const alltickets = useSelector(state=>state.getTickets);\n    const {tickets} = alltickets\n  \n    const dispatch = useDispatch(); \n    \n    const showTicket = (ticket) => {\n        let arr = [];\n            for (let order of ticket.ordersItems) {\n                if(order.status===\"DELIVERED\") {\n                    arr.push(order);\n                   \n                }\n            }\n           \n            return arr;\n    }\n   \n    useEffect(()=>{\n        dispatch(getTickets())\n    },[])\n\n    return (\n        <div className=\"payDelivery\"> \n            <table>\n                <thead>\n                    <tr>\n                        <th>User ID</th>\n                        <th>User Name</th>\n                        <th>User Finished Tickets</th>\n                        <th>Pay</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {tickets&&tickets.map(ticket => {\n                    let arr = showTicket(ticket);\n                    return arr.length>0&& \n                            \n                            <DeliveredPayTable \n                                key = {'payment'+ticket.userId }\n                                arr = {arr}\n                                userId = {ticket.userId}\n                            />\n                                  \n                }\n\n                )\n                    \n                }\n                </tbody>\n            </table>\n        </div>\n\n\n    )\n\n}\nexport default PayDelivery;",["112","113"],"/Users/leifu/Documents/william delivery system/frontend/src/Components/DeliveredPayTable.js",[],"/Users/leifu/Documents/william delivery system/frontend/src/App.js",["114","115"],"/Users/leifu/Documents/william delivery system/frontend/src/reportWebVitals.js",[],"/Users/leifu/Documents/william delivery system/frontend/src/Reducers/ordersReducer.js",[],["116","117"],"/Users/leifu/Documents/william delivery system/frontend/src/Screens/CreateOrders.js",[],["118","119"],"/Users/leifu/Documents/william delivery system/frontend/src/Screens/RequestTicketsScreen.js",["120","121","122","123"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {getTickets} from '../Actions/ordersAction';\nimport TicketsRow from '../Components/ticketsTable';\nimport {acceptOrder,rejectOrder} from '../Actions/ordersAction';\n\nconst RequestTickestsScreen = () => {\n    const allTickets = useSelector(state => state.getTickets);\n    const {tickets, loading} = allTickets;\n    const dispatch = useDispatch();\n    useEffect(()=>{\n            dispatch(getTickets())\n    },[])\n    \n    return (\n        <div className=\"requestTicketsScreen\">\n            <h2>All Tickets</h2>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Requestor's ID</th>\n                        <th>Requestor's Name</th>\n                        <th>Requestor's City</th>\n                        <th>Ticket's City</th>\n                        <th>Ticket's Number</th>\n                        <th>Ticket's Created Date</th>\n                        <th>Product</th>\n                        <th>Status</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {loading?<tr><td>loading</td></tr>:\n                     tickets && tickets.map && tickets.map(ticket=>\n                        ticket.ordersItems&&ticket.ordersItems.map(order => \n                            <TicketsRow \n                            userId = {ticket.userId} \n                            key = {order._id+'Loren'}\n                            city = {order.city}\n                            orderId = {order.orderId}\n                            date = {order.date.substring(0,10)}\n                            product = {order.product}\n                            status = {order.status}\n                            imagePath= {order.imagePath}\n                            />\n                            ))}\n                </tbody>\n            </table>\n\n        </div>\n    )\n}\nexport default RequestTickestsScreen;","/Users/leifu/Documents/william delivery system/frontend/src/Actions/userAction.js",[],"/Users/leifu/Documents/william delivery system/frontend/src/Constant/userConstant.js",[],"/Users/leifu/Documents/william delivery system/frontend/src/Components/ModalDropOff/ModalDropOff.js",[],"/Users/leifu/Documents/william delivery system/frontend/src/Screens/SigninScreen.js",["124","125","126"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {signin} from '../Actions/userAction';\nconst SigninScreen =(props) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const userSignin = useSelector(state=>state.userSignin);\n    const {loading, userInfo, error} = userSignin;\n    const allYourTickets = useSelector(state => state.getYourTickets)\n    const {yourtickets} = allYourTickets\n    const cart = useSelector(state=> state.cart);\n    let { cartItems } = cart;\n    const dispatch  = useDispatch();\n    const redirect = props.location.search?props.location.search.split(\"=\")[1]:'/';\n    useEffect(\n       () => {\n        if (userInfo&&yourtickets&&yourtickets[0]){\n            console.log(\"wwww userInfo\",userInfo);\n            console.log(\"wwwww  yourtickets\",yourtickets);\n            const yourOrders =  yourtickets[0].ordersItems;\n           \n            const orderId = redirect.split(\"/\")[2];\n            console.log(\"orderId\",orderId)\n            console.log(\"yourOrders\",yourOrders)\n            const ticket = yourOrders.find(ticket=>ticket.orderId == orderId);\n            console.log(\"www ticket\", ticket);\n            if(ticket && ticket.status ===\"WAITING\") {\n                window.alert(\"You already have the ticket and it is waiting to check\")\n                props.history.push('/');\n            } \n            else if (ticket && ticket.status === \"REJECT\") {\n                window.alert(\"You have selected the ticket but it has been rejected\")\n                props.history.push('/');\n            }\n            else if (ticket && ticket.status == \"ACCEPT\") {\n                window.alert(\"You already have the ticket and it passed the check. You can delver it now\")\n                props.history.push('/');\n            }\n            else if(cartItems.length>0){\n                window.alert(\"You have to submit the ticket in you cart and then you can add another order in your cart\");\n                props.history.push(\"/\");\n            }\n            else {\n                props.history.push(redirect);\n            }\n        }\n        else if (userInfo){\n            props.history.push(redirect);\n        }\n    }, [userInfo, props.history,redirect]);\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(signin(email, password));\n    }\n    return <div className=\"form\">\n        <form onSubmit ={submitHandler} >\n            <ul className=\"form-container\">\n                <li>\n                    <h2>Sign-In</h2>\n                </li>\n                <li>\n                    {loading && <div>loading</div>}\n                    {error && <div>{error}</div>}\n                </li>\n                <li>\n                    <label htmlFor=\"email\">\n                        Email\n                    </label>\n                    <input type=\"email\" name = \"email\" id=\"email\" \n                    onChange={(e) => setEmail(e.target.value)}>\n                    </input>\n                </li>\n                <li>\n                    <label htmlFor = \"password\">Password</label>\n                    <input type=\"password\" id=\"password\" name=\"password\"\n                    onChange={(e) => setPassword(e.target.value)}></input>\n                </li>\n                <li>\n                    <button type=\"submit\" className=\"button primary\">Sign In</button>\n                </li>\n                <li>\n                    New to amazona?\n                </li>\n                <li>\n                    <Link to ={redirect === \"/\"? \"register\": \"register?redirect=\"+ redirect} className=\"button secondary full-width\">Create your account</Link>\n                </li>\n\n            </ul>\n        </form>\n    </div>\n}\nexport default SigninScreen;\n\n\n","/Users/leifu/Documents/william delivery system/frontend/src/Screens/OrdersScreen.js",["127","128","129","130"],"import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {getAllOrderList, getYourTickets} from '../Actions/ordersAction';\nimport { getYourTicketsReducer } from '../Reducers/ordersReducer';\nconst OrdersScreen = (props) => {\n    const [stateSearch, setStateSearch] = useState('');\n    const [citySearch, setCitySearch] = useState('');\n    const [streetSearch, setStreetSearch] = useState('');\n    const [orderNumberSearch, setOrderNumberSearch]= useState('');\n    const [createdDateSearch, setCreatedDateSearch]= useState('');\n    const [stateSort, setStateSort] = useState({ascending:false});\n    const [stateSortClicked, setStateSortClicked] = useState(false)\n    const [citySort, setCitySort] = useState({ascending:false});\n    const [citySortClicked, setCitySortClicked] = useState(false)\n    const [streetSort, setStreetSort] = useState({ascending:false});\n    const [streetSortClicked, setStreetSortClicked] = useState(false)\n    const [orderNumberSort, setOrderNumberSort]= useState({ascending:false});\n    const [orderNumberSortClicked, setOrderNumberSortClicked] = useState(false)\n    const [createdDateSort, setCreatedDateSort]= useState({ascending:false});\n    const [createdDateSortClicked, setCreatedDateSortClicked] = useState(false)\n    const [filterClass, setFilterClass] = useState('filter notShow');\n    const userSignin = useSelector(state => state.userSignin);\n    const {userInfo} = userSignin\n    const allOrders = useSelector(state => state.allOrderList);\n    const {allOrderList} = allOrders;\n    const cart = useSelector(state=> state.cart);\n    let { cartItems } = cart;\n    const takeHandler = (orderId) => {\n        if(userInfo) {\n            console.log(\"www call take handler get your tickets\");\n            // if(cartItems.length>0) {\n            //     window.alert(\"You have to submit the ticket in you cart and then you can add another order in your cart\");\n            // }\n            // else {\n            // dispatch(getYourTickets(props.history, orderId));\n            // }\n            dispatch(getYourTickets(props.history, orderId));\n        }\n        else{\n        props.history.push(`/signin?redirect=/orders/${orderId}`); \n        }\n    }\n    const filterShowHandler = () => {\n      filterClass==='filter notShow' \n      ? setFilterClass('filter')\n      : setFilterClass('filter notShow')\n       \n    }\n    const dispatch = useDispatch()\n    useEffect(()=> {\n        dispatch(getAllOrderList(\n            stateSearch, citySearch, streetSearch, \n            orderNumberSearch, createdDateSearch,\n            stateSort,stateSortClicked, \n            citySort,citySortClicked, \n            streetSort, streetSortClicked, \n            orderNumberSort, orderNumberSortClicked, \n            createdDateSort, createdDateSortClicked));\n            setStateSortClicked(false);\n            setCitySortClicked(false);\n            setStreetSortClicked(false);\n            setOrderNumberSortClicked(false);\n            setCreatedDateSortClicked(false);     \n    },[stateSearch, citySearch, streetSearch, orderNumberSearch, createdDateSearch\n    ,stateSort, citySort, streetSort, orderNumberSort, createdDateSort])\n \n    return (\n        <div className=\"ordersScreen\">\n            <h2>All Orders</h2>\n            <button className = \"filterButton\" onClick={filterShowHandler}>Filter</button>\n            <table>\n                <thead>\n                    <tr className={filterClass}>\n                        <td>\n                            <input type=\"text\" name=\"state\" value={stateSearch} onChange={e=>setStateSearch(e.target.value)} />\n                        </td>\n                        <td>\n                            <input type=\"text\" name=\"city\" value={citySearch} onChange={e=>setCitySearch(e.target.value)} />\n                        </td>\n                        <td>\n                            <input type=\"text\" name=\"street\" value={streetSearch} onChange={e=>setStreetSearch(e.target.value)} />\n                        </td>\n                        <td>\n                            <input type=\"text\" name=\"orderNumber\" value={orderNumberSearch} onChange={e=>setOrderNumberSearch(e.target.value)} />\n                        </td>\n                        <td>\n                            <input type=\"text\" name=\"createdDate\" value={createdDateSearch} onChange={e=>setCreatedDateSearch(e.target.value)}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <th onClick={()=>{\n                            setStateSort(prev => ({ascending:!prev.ascending}));\n                            setStateSortClicked(true);\n                        }}>\n                            State\n                        </th>\n                        <th onClick={()=>{\n                            setCitySort(prev => ({ascending:!prev.ascending}));\n                            setCitySortClicked(true);\n                        }}>                           \n                            City\n                        </th>\n                        <th onClick={()=>{\n                            setStreetSort(prev => ({ascending:!prev.ascending}));\n                            setStreetSortClicked(true);\n                        }}>                            \n                            Street\n                        </th>\n                        <th onClick={()=>{\n                            setOrderNumberSort(prev => ({ascending:!prev.ascending}));\n                            setOrderNumberSortClicked(true);\n                        }}>                            \n                            Order Number\n                        </th>\n                        <th onClick={()=>{\n                            setCreatedDateSort(prev => ({ascending:!prev.ascending}));\n                            setCreatedDateSortClicked(true);\n                        }}>                           \n                            Created Date\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {allOrderList&& allOrderList.map(order=>\n                        order.show&&<tr key={order._id}>\n                            <td>{order.state}</td>\n                            <td>{order.city}</td>\n                            <td>{order.street}</td>\n                            <td>{order.ordernumber}</td>\n                            <td>{order.updatedAt.substring(0,10)}</td>\n                            <td>{order.show}</td>\n                            <td><button className=\"myButton\" onClick = {()=>{takeHandler(order._id)}}>TAKE IT</button></td>\n                        </tr>\n                        \n                    )}\n                </tbody>\n\n            </table>\n        </div>\n    )\n}\nexport default OrdersScreen;","/Users/leifu/Documents/william delivery system/frontend/src/Reducers/userReducer.js",[],"/Users/leifu/Documents/william delivery system/frontend/src/Constant/ordersConstant.js",[],"/Users/leifu/Documents/william delivery system/frontend/src/Components/PopupModal/PopupModal.js",[],"/Users/leifu/Documents/william delivery system/frontend/src/Screens/CartScreen.js",["131","132","133","134","135","136"],"/Users/leifu/Documents/william delivery system/frontend/src/Actions/ordersAction.js",[],"/Users/leifu/Documents/william delivery system/frontend/src/store.js",[],"/Users/leifu/Documents/william delivery system/frontend/src/Screens/DataScreen.js",["137","138","139","140","141"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {usersList, deleteUser, saveUser} from '../Actions/userAction';\n\nconst DataScreen = React.memo(() => {\n    const inforUsers= useSelector(state => state.usersInfo);\n    const {error, loading, userInfo} = inforUsers;\n    const successDelete = useSelector(state => state.delteUser);\n    const {success: deleteSuccess} = successDelete;\n    const userSave = useSelector(state => state.saveUser);\n    const {success: saveSuccess, error: saveError, loading: saveLoading} = userSave;\n    const [name, setName] = useState('');\n    const [password,setPassword] = useState();\n    const [email, setEmail] = useState();\n    const [points, setPoints] = useState();\n    const [modalVisable, setModalVisable] = useState(false);\n    const [_id, setId] = useState();\n   \n    \n    const dispatch = useDispatch();\n    useEffect(()=> {\n        console.log(\"userSave\",userSave.success);\n        console.log('deleteSucces',deleteSuccess);\n        // if (saveSuccess) {\n        //     setModalVisable(false);\n        //   }\n        dispatch(usersList());\n       \n    },[deleteSuccess, saveSuccess])\n        \n   const openModal = (user) => {\n       setModalVisable(true);\n       setName(user.name);\n       setPassword(user.password);\n       setEmail(user.email);\n       setId(user._id)\n   }\n    const deletHandler = (user) => {\n        // if(window.confirm('Are you sure?')) {\n        //     dispatch(deleteUser(user._id));\n        // }\n        dispatch(deleteUser(user._id));\n    }\n    const submitHanlder = (event) => {\n        console.log('submit');\n        event.preventDefault();\n        dispatch(\n            saveUser({\n                name,\n                password,\n                email,\n                _id\n            }\n            )\n        )\n    }\n    \n    return (\n        <div className=\"product-list\">\n            <h2>All Users</h2>\n            <div className=\"editForm\">\n                {modalVisable && \n                <form onSubmit ={submitHanlder}>\n                    <div >\n                        <ul>\n                            <li>\n                                <h2>Edit Info</h2>\n                            </li>\n                            <li>\n                                {saveSuccess && <div> Save Success</div>}\n                                {saveLoading && <div>Loading</div>}\n                                {saveError && <div>{saveError}</div>}\n                               \n                            </li>\n                            <li>\n                                <label htmlFor=\"name\">Name</label>\n                                <input\n                                type=\"text\"\n                                name=\"name\"\n                                value={name}\n                                onChange = {e=>setName(e.target.value)}\n                                />\n                            </li>\n                            <li>\n                                <label htmlFor=\"email\">Email</label>\n                                <input\n                                type=\"email\"\n                                name=\"email\"\n                                value={email}\n                                onChange = {e=>setEmail(e.target.value)}\n                                />\n                            </li>\n                            <li>\n                                <label htmlFor=\"password\">password</label>\n                                <input\n                                type=\"text\"\n                                name=\"phonenumber\"\n                                value={password}\n                                onChange = {e=>setPassword(e.target.value)}\n                                />\n                            </li>\n                            \n                            <li>\n                                <button type=\"submit\" className=\"button primary\"\n                                >Submit</button>\n                                <button type=\"button\" className=\"back button primary\" onClick={()=> {setModalVisable(false)}}\n                                >Back</button>\n                            </li>\n                        </ul>\n                    </div>\n                </form> \n                }\n            </div>\n           \n          {!userInfo&& <p> Loading </p>}\n          {userInfo &&\n          <table className=\"table\">\n              <thead>\n                <tr>\n                    <th>ID</th>\n                    <th>Name</th>\n                    <th>Email</th>\n                    <th>password</th>\n                    <th>Date</th>\n                </tr>\n            </thead>\n            <tbody>\n                 {JSON.parse(userInfo).map((user) => (\n                    <tr key={user._id}>\n                        <td>{user._id}</td>\n                        <td>{user.name}</td>\n                        <td>{user.email}</td>\n                        <td>{user.password}</td>\n                        <td>{user.updatedAt.substring(0,10)}</td>\n                        <td>\n                        <button onClick={()=>openModal(user)}>Edit</button>\n                        <button onClick={()=>deletHandler(user)}>Delete</button>\n                        </td>\n                    </tr>\n                   \n                ))}\n            </tbody>\n           \n          </table>\n        }\n        </div>\n    )\n},\n)\nexport default DataScreen;","/Users/leifu/Documents/william delivery system/frontend/src/Screens/RegisterScreen.js",["142"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {register} from '../Actions/userAction';\nconst RegisterScreen =(props) => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n   \n    const [streetError, setStreetError] = useState(false);\n    const [cityError, setCityError] = useState(false);\n    const [stateError, setStateError] = useState(false);\n    const [cardNumberError, setCardNumberError] = useState(false);\n  \n    const [nameError, setNameError] = useState(false);\n    const [emailError, setEmailError] = useState(false);\n    const [passwordMatchError, setPasswordMatchError] = useState(false);\n    const [passwordError, setPasswordError] = useState(false);\n\n\n    const [password, setPassword] = useState('');\n    const [repassword, setRepassword] = useState('');\n    const [street, setStreet] = useState('');\n    const [city, setCity] = useState('');\n    const [state, setState] = useState('');\n    const [cardNumber, setCardNumber] = useState();\n    const userRegister = useSelector(state=>state.userRegister);\n    const {loading, error} = userRegister;\n    const userSignin = useSelector(state=>state.userSignin);\n    const {userInfo} = userSignin;\n    console.log(\"register userInfo\",userInfo);\n    const dispatch  = useDispatch();\n    const redirect = props.location.search ? props.location.search.split(\"=\")[1]:'/';\n    useEffect(\n       () => {\n           console.log(\"register\", userInfo);\n        if (userInfo){\n            props.history.push(redirect);\n        }\n    }, [userInfo]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (password&&(password === repassword)&&street&&city&&state&&cardNumber) {\n            dispatch(register(\n                name, email, password,street,city,state,cardNumber));\n        }\n        if(password !== repassword) {\n            setPasswordMatchError(true);\n        }\n        else {\n            setPasswordMatchError(false);\n        }\n        if(!name) {\n            setNameError(true);\n        }\n        else {\n            setNameError(false);\n        }\n      \n        if(!email) {\n            setEmailError(true);\n        }\n        else {\n            setEmailError(false);\n        }\n        if(!password) {\n            setPasswordError(true);\n        }\n        else {\n            setPasswordError(false);\n        }\n        \n        if(!street) {\n            setStreetError(true);\n        }\n        else {\n            setStreetError(false);\n        }\n        if(!city) {\n            setCityError(true);\n        }\n        else {\n            setCityError(false);\n        }\n      \n        if(!state) {\n            setStateError(true);\n        }\n        else {\n            setStateError(false);\n        }\n        if(!cardNumber) {\n            setCardNumberError(true);\n        }\n        else {\n            setCardNumberError(false);\n        }\n    }\n    return <div className=\"form\">\n        <form onSubmit ={submitHandler} >\n            <ul className=\"form-container\">\n                <li>\n                    <h2>Create An Account</h2>\n                </li>\n                <li>\n                    {loading && <div>loading</div>}\n                    {error && <div>{error}</div>}\n                    {passwordMatchError&& <div>Passwords do not match</div>}\n                    {streetError&& <div>Please fill the street field</div>}\n                    {cityError&& <div>Please fill the city field</div>}\n                    {stateError&& <div>Please select the state field</div>}\n                    {cardNumberError&& <div>Please fill the card number field</div>}\n                    {passwordError&&<div>Please fill the password field</div>}\n                    {emailError&&<div>Please fill the email field</div>}\n                    {nameError&&<div>Please fill the name field</div>}\n                </li>\n                <li>\n                    <label htmlFor=\"name\">\n                        Name\n                    </label>\n                    <input type=\"name\" name = \"name\" id=\"name\" \n                    onChange={(e) => setName(e.target.value)}>\n                    </input>\n                </li>\n                <li>\n                    <label htmlFor=\"email\">\n                        Email\n                    </label>\n                    <input type=\"email\" name = \"email\" id=\"email\" \n                    onChange={(e) => setEmail(e.target.value)}>\n                    </input>\n                </li>\n                <li>\n                    <label htmlFor = \"password\">Password</label>\n                    <input type=\"password\" id=\"password\" name=\"password\"\n                    onChange={(e) => setPassword(e.target.value)}></input>\n                </li>\n                <li>\n                    <label htmlFor = \"repassword\">Password</label>\n                    <input type=\"password\" id=\"repassword\" name=\"repassword\"\n                    onChange={(e) => setRepassword(e.target.value)}></input>\n                </li>\n                <li>\n                    <label htmlFor = \"cardnumber\">Credit/Debit Card Number</label>\n                    <input type=\"number\" id=\"cardnumber\" name=\"cardnumber\"\n                    onChange={(e) => setCardNumber(e.target.value)}></input>\n                </li>\n                <li>\n                    <label htmlFor = \"street\">Street</label>\n                    <input type=\"text\" id=\"street\" name=\"street\"\n                    onChange={(e) => setStreet(e.target.value)}></input>\n                </li>\n                <li>\n                    <label htmlFor = \"city\">City</label>\n                    <input type=\"text\" id=\"city\" name=\"city\"\n                    onChange={(e) => setCity(e.target.value)}></input>\n                </li>\n                <li>\n                    <label htmlFor = \"state\">State</label>\n                    {/* <input type=\"text\" id=\"state\" name=\"state\"\n                    onChange={(e) => setState(e.target.value)}></input> */}\n                    <select id=\"state\" name=\"state\" onChange={(e) => setState(e.target.value)}>\n                        <option value=\"\">--Please choose an option--</option>\n                            <option value=\"AL\">Alabama</option>\n                            <option value=\"AK\">Alaska</option>\n                            <option value=\"AZ\">Arizona</option>\n                            <option value=\"AR\">Arkansas</option>\n                            <option value=\"CA\">California</option>\n                            <option value=\"CO\">Colorado</option>\n                            <option value=\"CT\">Connecticut</option>\n                            <option value=\"DE\">Delaware</option>\n                            <option value=\"DC\">District Of Columbia</option>\n                            <option value=\"FL\">Florida</option>\n                            <option value=\"GA\">Georgia</option>\n                            <option value=\"HI\">Hawaii</option>\n                            <option value=\"ID\">Idaho</option>\n                            <option value=\"IL\">Illinois</option>\n                            <option value=\"IN\">Indiana</option>\n                            <option value=\"IA\">Iowa</option>\n                            <option value=\"KS\">Kansas</option>\n                            <option value=\"KY\">Kentucky</option>\n                            <option value=\"LA\">Louisiana</option>\n                            <option value=\"ME\">Maine</option>\n                            <option value=\"MD\">Maryland</option>\n                            <option value=\"MA\">Massachusetts</option>\n                            <option value=\"MI\">Michigan</option>\n                            <option value=\"MN\">Minnesota</option>\n                            <option value=\"MS\">Mississippi</option>\n                            <option value=\"MO\">Missouri</option>\n                            <option value=\"MT\">Montana</option>\n                            <option value=\"NE\">Nebraska</option>\n                            <option value=\"NV\">Nevada</option>\n                            <option value=\"NH\">New Hampshire</option>\n                            <option value=\"NJ\">New Jersey</option>\n                            <option value=\"NM\">New Mexico</option>\n                            <option value=\"NY\">New York</option>\n                            <option value=\"NC\">North Carolina</option>\n                            <option value=\"ND\">North Dakota</option>\n                            <option value=\"OH\">Ohio</option>\n                            <option value=\"OK\">Oklahoma</option>\n                            <option value=\"OR\">Oregon</option>\n                            <option value=\"PA\">Pennsylvania</option>\n                            <option value=\"RI\">Rhode Island</option>\n                            <option value=\"SC\">South Carolina</option>\n                            <option value=\"SD\">South Dakota</option>\n                            <option value=\"TN\">Tennessee</option>\n                            <option value=\"TX\">Texas</option>\n                            <option value=\"UT\">Utah</option>\n                            <option value=\"VT\">Vermont</option>\n                            <option value=\"VA\">Virginia</option>\n                            <option value=\"WA\">Washington</option>\n                            <option value=\"WV\">West Virginia</option>\n                            <option value=\"WI\">Wisconsin</option>\n                            <option value=\"WY\">Wyoming</option>\n                    </select>\t\n                </li>\n                <li>\n                    <button type=\"submit\" className=\"button primary\">Register</button>\n                </li>\n                <li>\n                    Already have an account? \n                    <Link to ={redirect === \"/\"? \"signin\": \"signin?redirect=\"+ redirect} className=\"button secondary full-width\">Sign in Your Account</Link>\n\n                </li>\n               \n\n            </ul>\n        </form>\n    </div>\n}\nexport default RegisterScreen;","/Users/leifu/Documents/william delivery system/frontend/src/Screens/UploadImageScreen.js",["143","144","145"],"/Users/leifu/Documents/william delivery system/frontend/src/Screens/PersonalPofile.js",["146","147"],"/Users/leifu/Documents/william delivery system/frontend/src/index.js",[],"/Users/leifu/Documents/william delivery system/frontend/src/Components/ticketsTable.js",["148","149","150","151","152","153","154","155"],"/Users/leifu/Documents/william delivery system/frontend/src/Screens/YourTicketsScreen.js",["156","157","158"],{"ruleId":"159","severity":1,"message":"160","line":26,"column":7,"nodeType":"161","endLine":26,"endColumn":9,"suggestions":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":1,"column":8,"nodeType":"169","messageId":"170","endLine":1,"endColumn":12},{"ruleId":"167","severity":1,"message":"171","line":11,"column":37,"nodeType":"169","messageId":"170","endLine":11,"endColumn":43},{"ruleId":"163","replacedBy":"172"},{"ruleId":"165","replacedBy":"173"},{"ruleId":"163","replacedBy":"174"},{"ruleId":"165","replacedBy":"175"},{"ruleId":"167","severity":1,"message":"176","line":1,"column":28,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"177","line":5,"column":9,"nodeType":"169","messageId":"170","endLine":5,"endColumn":20},{"ruleId":"167","severity":1,"message":"178","line":5,"column":21,"nodeType":"169","messageId":"170","endLine":5,"endColumn":32},{"ruleId":"159","severity":1,"message":"160","line":13,"column":7,"nodeType":"161","endLine":13,"endColumn":9,"suggestions":"179"},{"ruleId":"180","severity":1,"message":"181","line":26,"column":67,"nodeType":"182","messageId":"183","endLine":26,"endColumn":69},{"ruleId":"180","severity":1,"message":"181","line":36,"column":46,"nodeType":"182","messageId":"183","endLine":36,"endColumn":48},{"ruleId":"159","severity":1,"message":"184","line":51,"column":8,"nodeType":"161","endLine":51,"endColumn":42,"suggestions":"185"},{"ruleId":"167","severity":1,"message":"186","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":14},{"ruleId":"167","severity":1,"message":"187","line":5,"column":10,"nodeType":"169","messageId":"170","endLine":5,"endColumn":31},{"ruleId":"167","severity":1,"message":"188","line":28,"column":11,"nodeType":"169","messageId":"170","endLine":28,"endColumn":20},{"ruleId":"159","severity":1,"message":"189","line":65,"column":7,"nodeType":"161","endLine":66,"endColumn":72,"suggestions":"190"},{"ruleId":"167","severity":1,"message":"186","line":5,"column":10,"nodeType":"169","messageId":"170","endLine":5,"endColumn":14},{"ruleId":"167","severity":1,"message":"191","line":9,"column":12,"nodeType":"169","messageId":"170","endLine":9,"endColumn":24},{"ruleId":"167","severity":1,"message":"192","line":13,"column":27,"nodeType":"169","messageId":"170","endLine":13,"endColumn":38},{"ruleId":"167","severity":1,"message":"193","line":17,"column":12,"nodeType":"169","messageId":"170","endLine":17,"endColumn":15},{"ruleId":"167","severity":1,"message":"194","line":17,"column":17,"nodeType":"169","messageId":"170","endLine":17,"endColumn":23},{"ruleId":"159","severity":1,"message":"160","line":34,"column":7,"nodeType":"161","endLine":34,"endColumn":18,"suggestions":"195"},{"ruleId":"167","severity":1,"message":"196","line":7,"column":12,"nodeType":"169","messageId":"170","endLine":7,"endColumn":17},{"ruleId":"167","severity":1,"message":"197","line":7,"column":19,"nodeType":"169","messageId":"170","endLine":7,"endColumn":26},{"ruleId":"167","severity":1,"message":"198","line":15,"column":12,"nodeType":"169","messageId":"170","endLine":15,"endColumn":18},{"ruleId":"167","severity":1,"message":"199","line":15,"column":20,"nodeType":"169","messageId":"170","endLine":15,"endColumn":29},{"ruleId":"159","severity":1,"message":"200","line":29,"column":7,"nodeType":"161","endLine":29,"endColumn":35,"suggestions":"201"},{"ruleId":"159","severity":1,"message":"202","line":39,"column":8,"nodeType":"161","endLine":39,"endColumn":18,"suggestions":"203"},{"ruleId":"167","severity":1,"message":"197","line":20,"column":32,"nodeType":"169","messageId":"170","endLine":20,"endColumn":39},{"ruleId":"159","severity":1,"message":"204","line":41,"column":6,"nodeType":"161","endLine":41,"endColumn":15,"suggestions":"205"},{"ruleId":"206","severity":1,"message":"207","line":72,"column":18,"nodeType":"208","endLine":72,"endColumn":59},{"ruleId":"167","severity":1,"message":"186","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":14},{"ruleId":"159","severity":1,"message":"209","line":45,"column":8,"nodeType":"161","endLine":45,"endColumn":10,"suggestions":"210"},{"ruleId":"167","severity":1,"message":"211","line":12,"column":20,"nodeType":"169","messageId":"170","endLine":12,"endColumn":29},{"ruleId":"167","severity":1,"message":"212","line":13,"column":18,"nodeType":"169","messageId":"170","endLine":13,"endColumn":25},{"ruleId":"167","severity":1,"message":"213","line":14,"column":21,"nodeType":"169","messageId":"170","endLine":14,"endColumn":31},{"ruleId":"167","severity":1,"message":"214","line":15,"column":18,"nodeType":"169","messageId":"170","endLine":15,"endColumn":25},{"ruleId":"167","severity":1,"message":"215","line":16,"column":21,"nodeType":"169","messageId":"170","endLine":16,"endColumn":31},{"ruleId":"216","severity":1,"message":"217","line":49,"column":13,"nodeType":"208","endLine":49,"endColumn":91},{"ruleId":"159","severity":1,"message":"218","line":69,"column":7,"nodeType":"161","endLine":69,"endColumn":21,"suggestions":"219"},{"ruleId":"216","severity":1,"message":"217","line":91,"column":21,"nodeType":"208","endLine":91,"endColumn":74},{"ruleId":"167","severity":1,"message":"186","line":4,"column":9,"nodeType":"169","messageId":"170","endLine":4,"endColumn":13},{"ruleId":"167","severity":1,"message":"220","line":7,"column":25,"nodeType":"169","messageId":"170","endLine":7,"endColumn":32},{"ruleId":"159","severity":1,"message":"160","line":27,"column":7,"nodeType":"161","endLine":27,"endColumn":9,"suggestions":"221"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["222"],"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.",["223"],["224"],["223"],["224"],"'useState' is defined but never used.","'acceptOrder' is defined but never used.","'rejectOrder' is defined but never used.",["225"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'cartItems.length' and 'yourtickets'. Either include them or remove the dependency array.",["226"],"'Link' is defined but never used.","'getYourTicketsReducer' is defined but never used.","'cartItems' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'citySortClicked', 'createdDateSortClicked', 'dispatch', 'orderNumberSortClicked', 'stateSortClicked', and 'streetSortClicked'. Either include them or remove the dependency array.",["227"],"'allOrderList' is assigned a value but never used.","'placedOrder' is assigned a value but never used.","'pid' is assigned a value but never used.","'setPid' is assigned a value but never used.",["228"],"'error' is assigned a value but never used.","'loading' is assigned a value but never used.","'points' is assigned a value but never used.","'setPoints' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userSave.success'. Either include them or remove the dependency array.",["229"],"React Hook useEffect has missing dependencies: 'props.history' and 'redirect'. Either include them or remove the dependency array.",["230"],"React Hook useEffect has missing dependencies: 'count', 'dispatch', 'imagePath', and 'orderId'. Either include them or remove the dependency array.",["231"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["232"],"'setUserId' is assigned a value but never used.","'setCity' is assigned a value but never used.","'setOrderId' is assigned a value but never used.","'setDate' is assigned a value but never used.","'setProduct' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'count' and 'status'. Either include them or remove the dependency array. You can also do a functional update 'setStatus(s => ...)' if you only need 'status' in the 'setStatus' call.",["233"],"'success' is assigned a value but never used.",["234"],{"desc":"235","fix":"236"},"no-global-assign","no-unsafe-negation",{"desc":"235","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"235","fix":"254"},"Update the dependencies array to be: [dispatch]",{"range":"255","text":"256"},{"range":"257","text":"256"},"Update the dependencies array to be: [userInfo, props.history, redirect, yourtickets, cartItems.length]",{"range":"258","text":"259"},"Update the dependencies array to be: [stateSearch, citySearch, streetSearch, orderNumberSearch, createdDateSearch, stateSort, citySort, streetSort, orderNumberSort, createdDateSort, dispatch, stateSortClicked, citySortClicked, streetSortClicked, orderNumberSortClicked, createdDateSortClicked]",{"range":"260","text":"261"},"Update the dependencies array to be: [dispatch, productId]",{"range":"262","text":"263"},"Update the dependencies array to be: [deleteSuccess, dispatch, saveSuccess, userSave.success]",{"range":"264","text":"265"},"Update the dependencies array to be: [props.history, redirect, userInfo]",{"range":"266","text":"267"},"Update the dependencies array to be: [count, dispatch, imagePath, orderId, success]",{"range":"268","text":"269"},"Update the dependencies array to be: [userInfo]",{"range":"270","text":"271"},"Update the dependencies array to be: [count, status, ticketStatus]",{"range":"272","text":"273"},{"range":"274","text":"256"},[737,739],"[dispatch]",[520,522],[2297,2331],"[userInfo, props.history, redirect, yourtickets, cartItems.length]",[3089,3237],"[stateSearch, citySearch, streetSearch, orderNumberSearch, createdDateSearch, stateSort, citySort, streetSort, orderNumberSort, createdDateSort, dispatch, stateSortClicked, citySortClicked, streetSortClicked, orderNumberSortClicked, createdDateSortClicked]",[1376,1387],"[dispatch, productId]",[1160,1188],"[deleteSuccess, dispatch, saveSuccess, userSave.success]",[1633,1643],"[props.history, redirect, userInfo]",[1509,1518],"[count, dispatch, imagePath, orderId, success]",[1778,1780],"[userInfo]",[2533,2547],"[count, status, ticketStatus]",[932,934]]